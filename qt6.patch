diff -uNr a/autotests/databasetest.cpp b/autotests/databasetest.cpp
--- a/autotests/databasetest.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/autotests/databasetest.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -30,30 +30,30 @@
     void testAddGroup()
     {
         GroupData data;
-        data.m_id = GroupId("Group1");
-        data.m_name = "Group 1";
-        data.m_url = "GroupUrl1";
+        data.m_id = GroupId(QStringLiteral("Group1"));
+        data.m_name = QStringLiteral("Group 1");
+        data.m_url = QStringLiteral("GroupUrl1");
 
         Database::instance().addGroup(data);
 
         QCOMPARE(Database::instance().groupCount(), 1);
         const QVector<GroupData> groups = Database::instance().groups();
         const GroupData &group1 = groups.at(0);
-        QCOMPARE(group1.m_id.value(), "Group1");
-        QCOMPARE(group1.m_name, "Group 1");
-        QCOMPARE(group1.m_url, "GroupUrl1");
+        QCOMPARE(group1.m_id.value(), QStringLiteral("Group1"));
+        QCOMPARE(group1.m_name, QStringLiteral("Group 1"));
+        QCOMPARE(group1.m_url, QStringLiteral("GroupUrl1"));
     }
 
     void testAddGroups()
     {
         GroupData data2;
-        data2.m_id = GroupId("Group2");
-        data2.m_name = "Group 2";
-        data2.m_url = "GroupUrl2";
+        data2.m_id = GroupId(QStringLiteral("Group2"));
+        data2.m_name = QStringLiteral("Group 2");
+        data2.m_url = QStringLiteral("GroupUrl2");
         GroupData data3;
-        data3.m_id = GroupId("Group3");
-        data3.m_name = "Group 3";
-        data3.m_url = "GroupUrl3";
+        data3.m_id = GroupId(QStringLiteral("Group3"));
+        data3.m_name = QStringLiteral("Group 3");
+        data3.m_url = QStringLiteral("GroupUrl3");
         QVector<GroupData> data;
         data.push_back(data2);
         data.push_back(data3);
@@ -63,162 +63,162 @@
         QCOMPARE(Database::instance().groupCount(), 3);
         const QVector<GroupData> groups = Database::instance().groups();
         const GroupData &group1 = groups.at(0);
-        QCOMPARE(group1.m_id.value(), "Group1");
-        QCOMPARE(group1.m_name, "Group 1");
-        QCOMPARE(group1.m_url, "GroupUrl1");
+        QCOMPARE(group1.m_id.value(), QStringLiteral("Group1"));
+        QCOMPARE(group1.m_name, QStringLiteral("Group 1"));
+        QCOMPARE(group1.m_url, QStringLiteral("GroupUrl1"));
         const GroupData &group2 = groups.at(1);
-        QCOMPARE(group2.m_id.value(), "Group2");
-        QCOMPARE(group2.m_name, "Group 2");
-        QCOMPARE(group2.m_url, "GroupUrl2");
+        QCOMPARE(group2.m_id.value(), QStringLiteral("Group2"));
+        QCOMPARE(group2.m_name, QStringLiteral("Group 2"));
+        QCOMPARE(group2.m_url, QStringLiteral("GroupUrl2"));
         const GroupData &group3 = groups.at(2);
-        QCOMPARE(group3.m_id.value(), "Group3");
-        QCOMPARE(group3.m_name, "Group 3");
-        QCOMPARE(group3.m_url, "GroupUrl3");
+        QCOMPARE(group3.m_id.value(), QStringLiteral("Group3"));
+        QCOMPARE(group3.m_name, QStringLiteral("Group 3"));
+        QCOMPARE(group3.m_url, QStringLiteral("GroupUrl3"));
     }
 
     void testGroupExists()
     {
-        QCOMPARE(Database::instance().groupExists(GroupId("Group1")), true);
-        QCOMPARE(Database::instance().groupExists(GroupId("Group2")), true);
-        QCOMPARE(Database::instance().groupExists(GroupId("Group3")), true);
+        QCOMPARE(Database::instance().groupExists(GroupId(QStringLiteral("Group1"))), true);
+        QCOMPARE(Database::instance().groupExists(GroupId(QStringLiteral("Group2"))), true);
+        QCOMPARE(Database::instance().groupExists(GroupId(QStringLiteral("Group3"))), true);
 
-        QCOMPARE(Database::instance().groupExists(GroupId("Group0")), false);
+        QCOMPARE(Database::instance().groupExists(GroupId(QStringLiteral("Group0"))), false);
     }
 
     void testAddChannel()
     {
         ChannelData data;
-        data.m_id = ChannelId("Channel1");
-        data.m_name = "Channel 1";
-        data.m_url = "Channel1Url";
-        data.m_image = "Channel1Image";
+        data.m_id = ChannelId(QStringLiteral("Channel1"));
+        data.m_name = QStringLiteral("Channel 1");
+        data.m_url = QStringLiteral("Channel1Url");
+        data.m_image = QStringLiteral("Channel1Image");
 
-        Database::instance().addChannel(data, GroupId("Group1"));
+        Database::instance().addChannel(data, GroupId(QStringLiteral("Group1")));
 
         QCOMPARE(Database::instance().channelCount(), 1);
         const QVector<ChannelData> channels = Database::instance().channels(false);
         const ChannelData &channel1 = channels.at(0);
-        QCOMPARE(channel1.m_id.value(), "Channel1");
-        QCOMPARE(channel1.m_name, "Channel 1");
-        QCOMPARE(channel1.m_url, "Channel1Url");
-        QCOMPARE(channel1.m_image, "Channel1Image");
+        QCOMPARE(channel1.m_id.value(), QStringLiteral("Channel1"));
+        QCOMPARE(channel1.m_name, QStringLiteral("Channel 1"));
+        QCOMPARE(channel1.m_url, QStringLiteral("Channel1Url"));
+        QCOMPARE(channel1.m_image, QStringLiteral("Channel1Image"));
     }
 
     void testGroupsForChannel()
     {
-        const QVector<GroupData> groups = Database::instance().groups(ChannelId("Channel1"));
+        const QVector<GroupData> groups = Database::instance().groups(ChannelId(QStringLiteral("Channel1")));
         QCOMPARE(groups.size(), 1);
-        QCOMPARE(groups.at(0).m_id.value(), "Group1");
+        QCOMPARE(groups.at(0).m_id.value(), QStringLiteral("Group1"));
     }
 
     void testAddChannels()
     {
         ChannelData data2;
-        data2.m_id = ChannelId("Channel2");
-        data2.m_name = "Channel 2";
-        data2.m_url = "Channel2Url";
-        data2.m_image = "Channel2Image";
+        data2.m_id = ChannelId(QStringLiteral("Channel2"));
+        data2.m_name = QStringLiteral("Channel 2");
+        data2.m_url = QStringLiteral("Channel2Url");
+        data2.m_image = QStringLiteral("Channel2Image");
         ChannelData data3;
-        data3.m_id = ChannelId("Channel3");
-        data3.m_name = "Channel 3";
-        data3.m_url = "Channel3Url";
-        data3.m_image = "Channel3Image";
+        data3.m_id = ChannelId(QStringLiteral("Channel3"));
+        data3.m_name = QStringLiteral("Channel 3");
+        data3.m_url = QStringLiteral("Channel3Url");
+        data3.m_image = QStringLiteral("Channel3Image");
         QList<ChannelData> data;
         data.push_back(data2);
         data.push_back(data3);
 
-        Database::instance().addChannels(data, GroupId("Group1"));
+        Database::instance().addChannels(data, GroupId(QStringLiteral("Group1")));
 
         QCOMPARE(Database::instance().channelCount(), 3);
         const QVector<ChannelData> channels = Database::instance().channels(false);
         const ChannelData &channel1 = channels.at(0);
-        QCOMPARE(channel1.m_id.value(), "Channel1");
-        QCOMPARE(channel1.m_name, "Channel 1");
-        QCOMPARE(channel1.m_url, "Channel1Url");
-        QCOMPARE(channel1.m_image, "Channel1Image");
+        QCOMPARE(channel1.m_id.value(), QStringLiteral("Channel1"));
+        QCOMPARE(channel1.m_name, QStringLiteral("Channel 1"));
+        QCOMPARE(channel1.m_url, QStringLiteral("Channel1Url"));
+        QCOMPARE(channel1.m_image, QStringLiteral("Channel1Image"));
         const ChannelData &channel2 = channels.at(1);
-        QCOMPARE(channel2.m_id.value(), "Channel2");
-        QCOMPARE(channel2.m_name, "Channel 2");
-        QCOMPARE(channel2.m_url, "Channel2Url");
-        QCOMPARE(channel2.m_image, "Channel2Image");
+        QCOMPARE(channel2.m_id.value(), QStringLiteral("Channel2"));
+        QCOMPARE(channel2.m_name, QStringLiteral("Channel 2"));
+        QCOMPARE(channel2.m_url, QStringLiteral("Channel2Url"));
+        QCOMPARE(channel2.m_image, QStringLiteral("Channel2Image"));
         const ChannelData &channel3 = channels.at(2);
-        QCOMPARE(channel3.m_id.value(), "Channel3");
-        QCOMPARE(channel3.m_name, "Channel 3");
-        QCOMPARE(channel3.m_url, "Channel3Url");
-        QCOMPARE(channel3.m_image, "Channel3Image");
+        QCOMPARE(channel3.m_id.value(), QStringLiteral("Channel3"));
+        QCOMPARE(channel3.m_name, QStringLiteral("Channel 3"));
+        QCOMPARE(channel3.m_url, QStringLiteral("Channel3Url"));
+        QCOMPARE(channel3.m_image, QStringLiteral("Channel3Image"));
     }
 
     void testChannelExists()
     {
-        QCOMPARE(Database::instance().channelExists(ChannelId("Channel1")), true);
-        QCOMPARE(Database::instance().channelExists(ChannelId("Channel2")), true);
-        QCOMPARE(Database::instance().channelExists(ChannelId("Channel3")), true);
+        QCOMPARE(Database::instance().channelExists(ChannelId(QStringLiteral("Channel1"))), true);
+        QCOMPARE(Database::instance().channelExists(ChannelId(QStringLiteral("Channel2"))), true);
+        QCOMPARE(Database::instance().channelExists(ChannelId(QStringLiteral("Channel3"))), true);
 
-        QCOMPARE(Database::instance().channelExists(ChannelId("Channel0")), false);
+        QCOMPARE(Database::instance().channelExists(ChannelId(QStringLiteral("Channel0"))), false);
     }
 
     void testChannel()
     {
-        const ChannelData &channel1 = Database::instance().channel(ChannelId("Channel1"));
-        QCOMPARE(channel1.m_id.value(), "Channel1");
-        QCOMPARE(channel1.m_name, "Channel 1");
-        QCOMPARE(channel1.m_url, "Channel1Url");
-        QCOMPARE(channel1.m_image, "Channel1Image");
+        const ChannelData &channel1 = Database::instance().channel(ChannelId(QStringLiteral("Channel1")));
+        QCOMPARE(channel1.m_id.value(), QStringLiteral("Channel1"));
+        QCOMPARE(channel1.m_name, QStringLiteral("Channel 1"));
+        QCOMPARE(channel1.m_url, QStringLiteral("Channel1Url"));
+        QCOMPARE(channel1.m_image, QStringLiteral("Channel1Image"));
     }
 
     void testAddFavorite()
     {
         QCOMPARE(Database::instance().favoriteCount(), 0);
-        Database::instance().addFavorite(ChannelId("Channel1"));
+        Database::instance().addFavorite(ChannelId(QStringLiteral("Channel1")));
         QCOMPARE(Database::instance().favoriteCount(), 1);
-        Database::instance().addFavorite(ChannelId("Channel2"));
+        Database::instance().addFavorite(ChannelId(QStringLiteral("Channel2")));
         QCOMPARE(Database::instance().favoriteCount(), 2);
     }
 
     void testFavorites()
     {
         const QVector<ChannelId> favorites = Database::instance().favorites();
-        QCOMPARE(favorites.at(0).value(), "Channel1");
-        QCOMPARE(favorites.at(1).value(), "Channel2");
+        QCOMPARE(favorites.at(0).value(), QStringLiteral("Channel1"));
+        QCOMPARE(favorites.at(1).value(), QStringLiteral("Channel2"));
     }
 
     void testChannelsOnlyFavorites()
     {
         const QVector<ChannelData> channels = Database::instance().channels(true);
         QCOMPARE(channels.size(), 2);
-        QCOMPARE(channels.at(0).m_id.value(), "Channel1");
-        QCOMPARE(channels.at(1).m_id.value(), "Channel2");
+        QCOMPARE(channels.at(0).m_id.value(), QStringLiteral("Channel1"));
+        QCOMPARE(channels.at(1).m_id.value(), QStringLiteral("Channel2"));
     }
 
     void testSortFavorites()
     {
         QVector<ChannelId> data;
-        data.push_back(ChannelId("Channel2"));
-        data.push_back(ChannelId("Channel1"));
+        data.push_back(ChannelId(QStringLiteral("Channel2")));
+        data.push_back(ChannelId(QStringLiteral("Channel1")));
         Database::instance().sortFavorites(data);
         const QVector<ChannelId> favorites = Database::instance().favorites();
         QCOMPARE(favorites.size(), 2);
-        QCOMPARE(favorites.at(0).value(), "Channel2");
-        QCOMPARE(favorites.at(1).value(), "Channel1");
+        QCOMPARE(favorites.at(0).value(), QStringLiteral("Channel2"));
+        QCOMPARE(favorites.at(1).value(), QStringLiteral("Channel1"));
     }
 
     void testIsFavorite()
     {
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel1")), true);
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel2")), true);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel1"))), true);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel2"))), true);
 
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel3")), false);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel3"))), false);
 
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel0")), false);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel0"))), false);
     }
 
     void testRemoveFavorite()
     {
         QCOMPARE(Database::instance().favoriteCount(), 2);
-        Database::instance().removeFavorite(ChannelId("Channel2"));
+        Database::instance().removeFavorite(ChannelId(QStringLiteral("Channel2")));
         QCOMPARE(Database::instance().favoriteCount(), 1);
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel1")), true);
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel2")), false);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel1"))), true);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel2"))), false);
     }
 
     void testClearFavorites()
@@ -226,137 +226,141 @@
         QCOMPARE(Database::instance().favoriteCount(), 1);
         Database::instance().clearFavorites();
         QCOMPARE(Database::instance().favoriteCount(), 0);
-        QCOMPARE(Database::instance().isFavorite(ChannelId("Channel1")), false);
+        QCOMPARE(Database::instance().isFavorite(ChannelId(QStringLiteral("Channel1"))), false);
     }
 
     void testAddProgram()
     {
         ProgramData data;
-        data.m_id = ProgramId("Program1");
-        data.m_url = "Program1Url";
-        data.m_channelId = ChannelId("Channel1");
-        data.m_startTime = QDateTime::fromString("2022-12-28T00:00:00", Qt::ISODate);
-        data.m_stopTime = QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate);
-        data.m_title = "Program1Title";
-        data.m_subtitle = "Program1Subtitle";
-        data.m_description = "Program1Description";
+        data.m_id = ProgramId(QStringLiteral("Program1"));
+        data.m_url = QStringLiteral("Program1Url");
+        data.m_channelId = ChannelId(QStringLiteral("Channel1"));
+        data.m_startTime = QDateTime::fromString(QStringLiteral("2022-12-28T00:00:00"), Qt::ISODate);
+        data.m_stopTime = QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate);
+        data.m_title = QStringLiteral("Program1Title");
+        data.m_subtitle = QStringLiteral("Program1Subtitle");
+        data.m_description = QStringLiteral("Program1Description");
         data.m_descriptionFetched = true;
-        data.m_categories = {"Category1"};
+        data.m_categories = {QStringLiteral("Category1")};
 
         Database::instance().addProgram(data);
 
-        QCOMPARE(Database::instance().programCount(ChannelId("Channel1")), 1);
-        const QVector<ProgramData> programs = Database::instance().programs(ChannelId("Channel1"));
+        QCOMPARE(Database::instance().programCount(ChannelId(QStringLiteral("Channel1"))), 1);
+        const QVector<ProgramData> programs = Database::instance().programs(ChannelId(QStringLiteral("Channel1")));
         const ProgramData &program1 = programs.at(0);
-        QCOMPARE(program1.m_id.value(), "Program1");
-        QCOMPARE(program1.m_url, "Program1Url");
-        QCOMPARE(program1.m_channelId.value(), "Channel1");
-        QCOMPARE(program1.m_startTime, QDateTime::fromString("2022-12-28T00:00:00", Qt::ISODate));
-        QCOMPARE(program1.m_stopTime, QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate));
-        QCOMPARE(program1.m_title, "Program1Title");
-        QCOMPARE(program1.m_subtitle, "Program1Subtitle");
-        QCOMPARE(program1.m_description, "Program1Description");
+        QCOMPARE(program1.m_id.value(), QStringLiteral("Program1"));
+        QCOMPARE(program1.m_url, QStringLiteral("Program1Url"));
+        QCOMPARE(program1.m_channelId.value(), QStringLiteral("Channel1"));
+        QCOMPARE(program1.m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T00:00:00"), Qt::ISODate));
+        QCOMPARE(program1.m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate));
+        QCOMPARE(program1.m_title, QStringLiteral("Program1Title"));
+        QCOMPARE(program1.m_subtitle, QStringLiteral("Program1Subtitle"));
+        QCOMPARE(program1.m_description, QStringLiteral("Program1Description"));
         QCOMPARE(program1.m_descriptionFetched, true);
-        QCOMPARE(program1.m_categories, {"Category1"});
+        QCOMPARE(program1.m_categories, {QStringLiteral("Category1")});
     }
 
     void testAddPrograms()
     {
         ProgramData data2;
-        data2.m_id = ProgramId("Program2");
-        data2.m_url = "Program2Url";
-        data2.m_channelId = ChannelId("Channel1");
-        data2.m_startTime = QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate);
-        data2.m_stopTime = QDateTime::fromString("2022-12-28T02:00:00", Qt::ISODate);
-        data2.m_title = "Program2Title";
-        data2.m_subtitle = "Program2Subtitle";
-        data2.m_description = "Program2Description";
+        data2.m_id = ProgramId(QStringLiteral("Program2"));
+        data2.m_url = QStringLiteral("Program2Url");
+        data2.m_channelId = ChannelId(QStringLiteral("Channel1"));
+        data2.m_startTime = QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate);
+        data2.m_stopTime = QDateTime::fromString(QStringLiteral("2022-12-28T02:00:00"), Qt::ISODate);
+        data2.m_title = QStringLiteral("Program2Title");
+        data2.m_subtitle = QStringLiteral("Program2Subtitle");
+        data2.m_description = QStringLiteral("Program2Description");
         data2.m_descriptionFetched = false;
-        data2.m_categories = {"Category2"};
+        data2.m_categories = {QStringLiteral("Category2")};
         ProgramData data3;
-        data3.m_id = ProgramId("Program3");
-        data3.m_url = "Program3Url";
-        data3.m_channelId = ChannelId("Channel2");
-        data3.m_startTime = QDateTime::fromString("2022-12-28T02:00:00", Qt::ISODate);
-        data3.m_stopTime = QDateTime::fromString("2022-12-28T03:00:00", Qt::ISODate);
-        data3.m_title = "Program3Title";
-        data3.m_subtitle = "Program3Subtitle";
-        data3.m_description = "Program3Description";
+        data3.m_id = ProgramId(QStringLiteral("Program3"));
+        data3.m_url = QStringLiteral("Program3Url");
+        data3.m_channelId = ChannelId(QStringLiteral("Channel2"));
+        data3.m_startTime = QDateTime::fromString(QStringLiteral("2022-12-28T02:00:00"), Qt::ISODate);
+        data3.m_stopTime = QDateTime::fromString(QStringLiteral("2022-12-28T03:00:00"), Qt::ISODate);
+        data3.m_title = QStringLiteral("Program3Title");
+        data3.m_subtitle = QStringLiteral("Program3Subtitle");
+        data3.m_description = QStringLiteral("Program3Description");
         data3.m_descriptionFetched = true;
-        data3.m_categories = {"Category1", "Category2"};
+        data3.m_categories = {QStringLiteral("Category1"), QStringLiteral("Category2")};
         QVector<ProgramData> data;
         data.push_back(data2);
         data.push_back(data3);
 
         Database::instance().addPrograms(data);
 
-        QCOMPARE(Database::instance().programCount(ChannelId("Channel1")), 2);
-        QCOMPARE(Database::instance().programCount(ChannelId("Channel2")), 1);
-        const QVector<ProgramData> programsChannel1 = Database::instance().programs(ChannelId("Channel1"));
+        QCOMPARE(Database::instance().programCount(ChannelId(QStringLiteral("Channel1"))), 2);
+        QCOMPARE(Database::instance().programCount(ChannelId(QStringLiteral("Channel2"))), 1);
+        const QVector<ProgramData> programsChannel1 = Database::instance().programs(ChannelId(QStringLiteral("Channel1")));
         const ProgramData &program1 = programsChannel1.at(0);
-        QCOMPARE(program1.m_id.value(), "Program1");
-        QCOMPARE(program1.m_url, "Program1Url");
-        QCOMPARE(program1.m_channelId.value(), "Channel1");
-        QCOMPARE(program1.m_startTime, QDateTime::fromString("2022-12-28T00:00:00", Qt::ISODate));
-        QCOMPARE(program1.m_stopTime, QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate));
-        QCOMPARE(program1.m_title, "Program1Title");
-        QCOMPARE(program1.m_subtitle, "Program1Subtitle");
-        QCOMPARE(program1.m_description, "Program1Description");
+        QCOMPARE(program1.m_id.value(), QStringLiteral("Program1"));
+        QCOMPARE(program1.m_url, QStringLiteral("Program1Url"));
+        QCOMPARE(program1.m_channelId.value(), QStringLiteral("Channel1"));
+        QCOMPARE(program1.m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T00:00:00"), Qt::ISODate));
+        QCOMPARE(program1.m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate));
+        QCOMPARE(program1.m_title, QStringLiteral("Program1Title"));
+        QCOMPARE(program1.m_subtitle, QStringLiteral("Program1Subtitle"));
+        QCOMPARE(program1.m_description, QStringLiteral("Program1Description"));
         QCOMPARE(program1.m_descriptionFetched, true);
-        QCOMPARE(program1.m_categories, {"Category1"});
+        QCOMPARE(program1.m_categories, {QStringLiteral("Category1")});
         const ProgramData &program2 = programsChannel1.at(1);
-        QCOMPARE(program2.m_id.value(), "Program2");
-        QCOMPARE(program2.m_url, "Program2Url");
-        QCOMPARE(program2.m_channelId.value(), "Channel1");
-        QCOMPARE(program2.m_startTime, QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate));
-        QCOMPARE(program2.m_stopTime, QDateTime::fromString("2022-12-28T02:00:00", Qt::ISODate));
-        QCOMPARE(program2.m_title, "Program2Title");
-        QCOMPARE(program2.m_subtitle, "Program2Subtitle");
-        QCOMPARE(program2.m_description, "Program2Description");
+        QCOMPARE(program2.m_id.value(), QStringLiteral("Program2"));
+        QCOMPARE(program2.m_url, QStringLiteral("Program2Url"));
+        QCOMPARE(program2.m_channelId.value(), QStringLiteral("Channel1"));
+        QCOMPARE(program2.m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate));
+        QCOMPARE(program2.m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T02:00:00"), Qt::ISODate));
+        QCOMPARE(program2.m_title, QStringLiteral("Program2Title"));
+        QCOMPARE(program2.m_subtitle, QStringLiteral("Program2Subtitle"));
+        QCOMPARE(program2.m_description, QStringLiteral("Program2Description"));
         QCOMPARE(program2.m_descriptionFetched, false);
-        QCOMPARE(program2.m_categories, {"Category2"});
-        const QVector<ProgramData> programsChannel2 = Database::instance().programs(ChannelId("Channel2"));
+        QCOMPARE(program2.m_categories, {QStringLiteral("Category2")});
+        const QVector<ProgramData> programsChannel2 = Database::instance().programs(ChannelId(QStringLiteral("Channel2")));
         const ProgramData &program3 = programsChannel2.at(0);
-        QCOMPARE(program3.m_id.value(), "Program3");
-        QCOMPARE(program3.m_url, "Program3Url");
-        QCOMPARE(program3.m_channelId.value(), "Channel2");
-        QCOMPARE(program3.m_startTime, QDateTime::fromString("2022-12-28T02:00:00", Qt::ISODate));
-        QCOMPARE(program3.m_stopTime, QDateTime::fromString("2022-12-28T03:00:00", Qt::ISODate));
-        QCOMPARE(program3.m_title, "Program3Title");
-        QCOMPARE(program3.m_subtitle, "Program3Subtitle");
-        QCOMPARE(program3.m_description, "Program3Description");
+        QCOMPARE(program3.m_id.value(), QStringLiteral("Program3"));
+        QCOMPARE(program3.m_url, QStringLiteral("Program3Url"));
+        QCOMPARE(program3.m_channelId.value(), QStringLiteral("Channel2"));
+        QCOMPARE(program3.m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T02:00:00"), Qt::ISODate));
+        QCOMPARE(program3.m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T03:00:00"), Qt::ISODate));
+        QCOMPARE(program3.m_title, QStringLiteral("Program3Title"));
+        QCOMPARE(program3.m_subtitle, QStringLiteral("Program3Subtitle"));
+        QCOMPARE(program3.m_description, QStringLiteral("Program3Description"));
         QCOMPARE(program3.m_descriptionFetched, true);
         QVector<QString> sortedCategories = program3.m_categories;
         std::sort(sortedCategories.begin(), sortedCategories.end());
-        QCOMPARE(sortedCategories.at(0), "Category1");
-        QCOMPARE(sortedCategories.at(1), "Category2");
+        QCOMPARE(sortedCategories.at(0), QStringLiteral("Category1"));
+        QCOMPARE(sortedCategories.at(1), QStringLiteral("Category2"));
     }
 
     void testProgramExists()
     {
-        QCOMPARE(Database::instance().programExists(ChannelId("Channel1"), QDateTime::fromString("2022-12-28T02:00:00", Qt::ISODate)), true);
-        QCOMPARE(Database::instance().programExists(ChannelId("Channel1"), QDateTime::fromString("2022-12-28T02:00:01", Qt::ISODate)), false);
+        QCOMPARE(Database::instance().programExists(ChannelId(QStringLiteral("Channel1")),
+                                                    QDateTime::fromString(QStringLiteral("2022-12-28T02:00:00"), Qt::ISODate)),
+                 true);
+        QCOMPARE(Database::instance().programExists(ChannelId(QStringLiteral("Channel1")),
+                                                    QDateTime::fromString(QStringLiteral("2022-12-28T02:00:01"), Qt::ISODate)),
+                 false);
     }
 
     void testUpdateProgramDescription()
     {
-        Database::instance().updateProgramDescription(ProgramId("Program2"), "Program2DescriptionUpdated");
-        const QVector<ProgramData> programsChannel1 = Database::instance().programs(ChannelId("Channel1"));
+        Database::instance().updateProgramDescription(ProgramId(QStringLiteral("Program2")), QStringLiteral("Program2DescriptionUpdated"));
+        const QVector<ProgramData> programsChannel1 = Database::instance().programs(ChannelId(QStringLiteral("Channel1")));
         const ProgramData &program2 = programsChannel1.at(1);
-        QCOMPARE(program2.m_description, "Program2DescriptionUpdated");
+        QCOMPARE(program2.m_description, QStringLiteral("Program2DescriptionUpdated"));
         QCOMPARE(program2.m_descriptionFetched, true);
     }
 
     void testPrograms()
     {
         const QMap<ChannelId, QVector<ProgramData>> programs = Database::instance().programs();
-        const QVector<ProgramData> programsChannel1 = programs[ChannelId("Channel1")];
+        const QVector<ProgramData> programsChannel1 = programs[ChannelId(QStringLiteral("Channel1"))];
         QCOMPARE(programsChannel1.size(), 2);
-        QCOMPARE(programsChannel1.at(0).m_id.value(), "Program1");
-        QCOMPARE(programsChannel1.at(1).m_id.value(), "Program2");
-        const QVector<ProgramData> programsChannel2 = programs[ChannelId("Channel2")];
+        QCOMPARE(programsChannel1.at(0).m_id.value(), QStringLiteral("Program1"));
+        QCOMPARE(programsChannel1.at(1).m_id.value(), QStringLiteral("Program2"));
+        const QVector<ProgramData> programsChannel2 = programs[ChannelId(QStringLiteral("Channel2"))];
         QCOMPARE(programsChannel2.size(), 1);
-        QCOMPARE(programsChannel2.at(0).m_id.value(), "Program3");
+        QCOMPARE(programsChannel2.at(0).m_id.value(), QStringLiteral("Program3"));
     }
 };
 
diff -uNr a/autotests/fetchertest.cpp b/autotests/fetchertest.cpp
--- a/autotests/fetchertest.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/autotests/fetchertest.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -24,7 +24,7 @@
 
         QVector<GroupData> groups;
         GroupData data;
-        data.m_id = GroupId("TestGroup");
+        data.m_id = GroupId(QStringLiteral("TestGroup"));
         groups.push_back(data);
         callback(groups);
     }
@@ -40,7 +40,7 @@
 
         QList<ChannelData> channels;
         ChannelData data;
-        data.m_id = ChannelId("TestChannel");
+        data.m_id = ChannelId(QStringLiteral("TestChannel"));
         channels.push_back(data);
         callback(channels);
     }
@@ -54,8 +54,8 @@
 
         QVector<ProgramData> programs;
         ProgramData data;
-        data.m_id = ProgramId("TestProgram");
-        data.m_channelId = ChannelId("TestChannel");
+        data.m_id = ProgramId(QStringLiteral("TestProgram"));
+        data.m_channelId = ChannelId(QStringLiteral("TestChannel"));
         programs.push_back(data);
         callback(programs);
     }
@@ -71,7 +71,7 @@
         Q_UNUSED(url)
         Q_UNUSED(errorCallback)
 
-        callback("TestDescription");
+        callback(QStringLiteral("TestDescription"));
     }
 
     QString image(const QString &url, std::function<void()> callback = nullptr, std::function<void(const Error &)> errorCallback = nullptr) override
@@ -81,14 +81,14 @@
 
         callback();
 
-        return "TestImage";
+        return QStringLiteral("TestImage");
     }
 
     QString imagePath(const QString &url) override
     {
         Q_UNUSED(url)
 
-        return "TestImagePath";
+        return QStringLiteral("TestImagePath");
     }
 };
 }
@@ -120,7 +120,7 @@
         Fetcher::instance().fetchGroups();
         QCOMPARE(Database::instance().groupCount(), 1);
         const QVector<GroupData> groups = Database::instance().groups();
-        QCOMPARE(groups.at(0).m_id.value(), "TestGroup");
+        QCOMPARE(groups.at(0).m_id.value(), QStringLiteral("TestGroup"));
     }
 
     void testFetchGroup()
@@ -132,20 +132,20 @@
         QCOMPARE(groupUpdatedSpy.count(), 1);
         QCOMPARE(Database::instance().channelCount(), 1);
         const QVector<ChannelData> channels = Database::instance().channels(false);
-        QCOMPARE(channels.at(0).m_id.value(), "TestChannel");
+        QCOMPARE(channels.at(0).m_id.value(), QStringLiteral("TestChannel"));
     }
 
     void testFetchFavorites()
     {
-        Database::instance().addFavorite(ChannelId("TestChannel"));
+        Database::instance().addFavorite(ChannelId(QStringLiteral("TestChannel")));
         QSignalSpy channelUpdatedSpy(&Fetcher::instance(), SIGNAL(channelUpdated(const ChannelId &)));
         QVERIFY(channelUpdatedSpy.isValid());
         QCOMPARE(channelUpdatedSpy.count(), 0);
         Fetcher::instance().fetchFavorites();
         QCOMPARE(channelUpdatedSpy.count(), 1);
-        QCOMPARE(Database::instance().programCount(ChannelId("TestChannel")), 1);
-        const QVector<ProgramData> programs = Database::instance().programs(ChannelId("TestChannel"));
-        QCOMPARE(programs.at(0).m_id.value(), "TestProgram");
+        QCOMPARE(Database::instance().programCount(ChannelId(QStringLiteral("TestChannel"))), 1);
+        const QVector<ProgramData> programs = Database::instance().programs(ChannelId(QStringLiteral("TestChannel")));
+        QCOMPARE(programs.at(0).m_id.value(), QStringLiteral("TestProgram"));
     }
 
     void testFetchProgramDescription()
@@ -153,10 +153,10 @@
         QSignalSpy channelUpdatedSpy(&Fetcher::instance(), SIGNAL(channelUpdated(const ChannelId &)));
         QVERIFY(channelUpdatedSpy.isValid());
         QCOMPARE(channelUpdatedSpy.count(), 0);
-        Fetcher::instance().fetchProgramDescription("TestChannel", "TestProgram", QString());
+        Fetcher::instance().fetchProgramDescription(QStringLiteral("TestChannel"), QStringLiteral("TestProgram"), QString());
         QCOMPARE(channelUpdatedSpy.count(), 1);
-        const QVector<ProgramData> programs = Database::instance().programs(ChannelId("TestChannel"));
-        QCOMPARE(programs.at(0).m_description, "TestDescription");
+        const QVector<ProgramData> programs = Database::instance().programs(ChannelId(QStringLiteral("TestChannel")));
+        QCOMPARE(programs.at(0).m_description, QStringLiteral("TestDescription"));
     }
 
     void testImage()
@@ -164,7 +164,7 @@
         QSignalSpy imageDownloadFinishedSpy(&Fetcher::instance(), SIGNAL(imageDownloadFinished(QString)));
         QVERIFY(imageDownloadFinishedSpy.isValid());
         QCOMPARE(imageDownloadFinishedSpy.count(), 0);
-        QCOMPARE(Fetcher::instance().image(QString()), "TestImage");
+        QCOMPARE(Fetcher::instance().image(QString()), QStringLiteral("TestImage"));
         QCOMPARE(imageDownloadFinishedSpy.count(), 1);
     }
 };
diff -uNr a/autotests/tvspielfilmfetchertest.cpp b/autotests/tvspielfilmfetchertest.cpp
--- a/autotests/tvspielfilmfetchertest.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/autotests/tvspielfilmfetchertest.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -105,18 +105,20 @@
         QCOMPARE(errorCallbackCalled, false);
         QCOMPARE(data.size(), 1);
         const GroupData &group = data.at(0);
-        QCOMPARE(group.m_id.value(), "tvspielfilm.germany");
-        QCOMPARE(group.m_name, "Germany");
-        QCOMPARE(group.m_url, "https://www.tvspielfilm.de/tv-programm/sendungen");
+        QCOMPARE(group.m_id.value(), QStringLiteral("tvspielfilm.germany"));
+        QCOMPARE(group.m_name, QStringLiteral("Germany"));
+        QCOMPARE(group.m_url, QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen"));
     }
 
     void testFetchGroup()
     {
-        QNetworkReply *reply = new MockQNetworkReply("data/tvspielfilmfetcher/channels.html");
+        QNetworkReply *reply = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/channels.html"));
         MockQNetworkAccessManager nam;
-        nam.registerReply("https://www.tvspielfilm.de/tv-programm/sendungen", reply);
+        nam.registerReply(QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen"), reply);
         TvSpielfilmFetcher fetcher(&nam);
-        const GroupData group{GroupId("tvspielfilm.germany"), "Germany", "https://www.tvspielfilm.de/tv-programm/sendungen"};
+        const GroupData group{GroupId(QStringLiteral("tvspielfilm.germany")),
+                              QStringLiteral("Germany"),
+                              QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen")};
         QList<ChannelData> data;
         bool callbackCalled = false;
         bool errorCallbackCalled = false;
@@ -138,23 +140,24 @@
 
     void testFetchProgram()
     {
-        const ChannelId channelId("SWR");
+        const ChannelId channelId(QStringLiteral("SWR"));
 
-        QNetworkReply *replyYesterday = new MockQNetworkReply("data/tvspielfilmfetcher/empty.html");
-        QNetworkReply *replyTodayPage1 = new MockQNetworkReply("data/tvspielfilmfetcher/swr-page1.html");
-        QNetworkReply *replyTodayPage2 = new MockQNetworkReply("data/tvspielfilmfetcher/swr-page2.html");
-        QNetworkReply *replyTomorrow = new MockQNetworkReply("data/tvspielfilmfetcher/empty.html");
+        QNetworkReply *replyYesterday = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/empty.html"));
+        QNetworkReply *replyTodayPage1 = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/swr-page1.html"));
+        QNetworkReply *replyTodayPage2 = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/swr-page2.html"));
+        QNetworkReply *replyTomorrow = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/empty.html"));
         MockQNetworkAccessManager nam;
 
-        const QString yesterday = QDate::currentDate().addDays(-1).toString("yyyy-MM-dd");
-        const QString today = QDate::currentDate().toString("yyyy-MM-dd");
-        const QString tomorrow = QDate::currentDate().addDays(1).toString("yyyy-MM-dd");
-
-        const QString url = "https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=" + channelId.value();
-        nam.registerReply(url + "&date=" + yesterday + "&page=1", replyYesterday);
-        nam.registerReply(url + "&date=" + today + "&page=1", replyTodayPage1);
-        nam.registerReply(url + "&date=" + today + "&page=2", replyTodayPage2); // link for 2022-12-28 page 2 hard coded in swr-page1.html
-        nam.registerReply(url + "&date=" + tomorrow + "&page=1", replyTomorrow);
+        const QString yesterday = QDate::currentDate().addDays(-1).toString(QStringLiteral("yyyy-MM-dd"));
+        const QString today = QDate::currentDate().toString(QStringLiteral("yyyy-MM-dd"));
+        const QString tomorrow = QDate::currentDate().addDays(1).toString(QStringLiteral("yyyy-MM-dd"));
+
+        const QString url = QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=") + channelId.value();
+        nam.registerReply(url + QStringLiteral("&date=") + yesterday + QStringLiteral("&page=1"), replyYesterday);
+        nam.registerReply(url + QStringLiteral("&date=") + today + QStringLiteral("&page=1"), replyTodayPage1);
+        nam.registerReply(url + QStringLiteral("&date=") + today + QStringLiteral("&page=2"),
+                          replyTodayPage2); // link for 2022-12-28 page 2 hard coded in swr-page1.html
+        nam.registerReply(url + QStringLiteral("&date=") + tomorrow + QStringLiteral("&page=1"), replyTomorrow);
 
         TvSpielfilmFetcher fetcher(&nam);
         QVector<ProgramData> data;
@@ -177,56 +180,56 @@
         QCOMPARE(errorCallbackCalled, false);
         QCOMPARE(data.size(), 3);
 
-        QCOMPARE(data.at(0).m_id, ProgramId("SWR_1672182000"));
-        QCOMPARE(data.at(0).m_url, "https://www.tvspielfilm.de/tv-programm/sendung/description1.html");
+        QCOMPARE(data.at(0).m_id, ProgramId(QStringLiteral("SWR_1672182000")));
+        QCOMPARE(data.at(0).m_url, QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description1.html"));
         QCOMPARE(data.at(0).m_channelId, channelId);
-        QCOMPARE(data.at(0).m_startTime, QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate));
-        QCOMPARE(data.at(0).m_stopTime, QDateTime::fromString("2022-12-28T07:00:00", Qt::ISODate));
-        QCOMPARE(data.at(0).m_title, "Title 1");
-        QCOMPARE(data.at(0).m_subtitle, "");
-        QCOMPARE(data.at(0).m_description, "");
+        QCOMPARE(data.at(0).m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(0).m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T07:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(0).m_title, QStringLiteral("Title 1"));
+        QCOMPARE(data.at(0).m_subtitle, QStringLiteral(""));
+        QCOMPARE(data.at(0).m_description, QStringLiteral(""));
         QCOMPARE(data.at(0).m_descriptionFetched, false);
-        QCOMPARE(data.at(0).m_categories.at(0), "Category 1");
+        QCOMPARE(data.at(0).m_categories.at(0), QStringLiteral("Category 1"));
 
-        QCOMPARE(data.at(1).m_id, ProgramId("SWR_1672203600"));
-        QCOMPARE(data.at(1).m_url, "https://www.tvspielfilm.de/tv-programm/sendung/description2.html");
+        QCOMPARE(data.at(1).m_id, ProgramId(QStringLiteral("SWR_1672203600")));
+        QCOMPARE(data.at(1).m_url, QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description2.html"));
         QCOMPARE(data.at(1).m_channelId, channelId);
-        QCOMPARE(data.at(1).m_startTime, QDateTime::fromString("2022-12-28T07:00:00", Qt::ISODate));
-        QCOMPARE(data.at(1).m_stopTime, QDateTime::fromString("2022-12-28T10:00:00", Qt::ISODate));
-        QCOMPARE(data.at(1).m_title, "Title 2");
-        QCOMPARE(data.at(1).m_subtitle, "");
-        QCOMPARE(data.at(1).m_description, "");
+        QCOMPARE(data.at(1).m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T07:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(1).m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T10:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(1).m_title, QStringLiteral("Title 2"));
+        QCOMPARE(data.at(1).m_subtitle, QStringLiteral(""));
+        QCOMPARE(data.at(1).m_description, QStringLiteral(""));
         QCOMPARE(data.at(1).m_descriptionFetched, false);
-        QCOMPARE(data.at(1).m_categories.at(0), "Category 2");
+        QCOMPARE(data.at(1).m_categories.at(0), QStringLiteral("Category 2"));
 
-        QCOMPARE(data.at(2).m_id, ProgramId("SWR_1672214400"));
-        QCOMPARE(data.at(2).m_url, "https://www.tvspielfilm.de/tv-programm/sendung/description3.html");
+        QCOMPARE(data.at(2).m_id, ProgramId(QStringLiteral("SWR_1672214400")));
+        QCOMPARE(data.at(2).m_url, QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description3.html"));
         QCOMPARE(data.at(2).m_channelId, channelId);
-        QCOMPARE(data.at(2).m_startTime, QDateTime::fromString("2022-12-28T10:00:00", Qt::ISODate));
-        QCOMPARE(data.at(2).m_stopTime, QDateTime::fromString("2022-12-28T13:00:00", Qt::ISODate));
-        QCOMPARE(data.at(2).m_title, "Title 3");
-        QCOMPARE(data.at(2).m_subtitle, "");
-        QCOMPARE(data.at(2).m_description, "");
+        QCOMPARE(data.at(2).m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T10:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(2).m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T13:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(2).m_title, QStringLiteral("Title 3"));
+        QCOMPARE(data.at(2).m_subtitle, QStringLiteral(""));
+        QCOMPARE(data.at(2).m_description, QStringLiteral(""));
         QCOMPARE(data.at(2).m_descriptionFetched, false);
-        QCOMPARE(data.at(2).m_categories.at(0), "Category 3");
+        QCOMPARE(data.at(2).m_categories.at(0), QStringLiteral("Category 3"));
     }
 
     void testFetchProgramDescription()
     {
-        const ChannelId channelId("SWR");
+        const ChannelId channelId(QStringLiteral("SWR"));
         ProgramId programId;
 
-        QNetworkReply *reply = new MockQNetworkReply("data/tvspielfilmfetcher/description.html");
+        QNetworkReply *reply = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/description.html"));
         MockQNetworkAccessManager nam;
-        nam.registerReply("https://www.tvspielfilm.de/tv-programm/sendung/description1.html", reply);
+        nam.registerReply(QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description1.html"), reply);
         TvSpielfilmFetcher fetcher(&nam);
         QString data;
         bool callbackCalled = false;
         bool errorCallbackCalled = false;
         fetcher.fetchProgramDescription(
             channelId,
-            ProgramId("channel1_1672182000"),
-            "https://www.tvspielfilm.de/tv-programm/sendung/description1.html",
+            ProgramId(QStringLiteral("channel1_1672182000")),
+            QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description1.html"),
             [&data, &callbackCalled](const QString &description) {
                 data = description;
                 callbackCalled = true;
@@ -237,7 +240,7 @@
         Q_EMIT reply->finished();
         QCOMPARE(callbackCalled, true);
         QCOMPARE(errorCallbackCalled, false);
-        QCOMPARE(data, "Description");
+        QCOMPARE(data, QStringLiteral("Description"));
     }
 };
 
diff -uNr a/autotests/xmltvfetchertest.cpp b/autotests/xmltvfetchertest.cpp
--- a/autotests/xmltvfetchertest.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/autotests/xmltvfetchertest.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -46,15 +46,15 @@
         QCOMPARE(errorCallbackCalled, false);
         QCOMPARE(data.size(), 1);
         const GroupData &group = data.at(0);
-        QCOMPARE(group.m_id.value(), "xmltv");
-        QCOMPARE(group.m_name, "XMLTV");
+        QCOMPARE(group.m_id.value(), QStringLiteral("xmltv"));
+        QCOMPARE(group.m_name, QStringLiteral("XMLTV"));
         QCOMPARE(group.m_url, m_dataPath);
     }
 
     void testFetchGroup()
     {
         XmltvFetcher fetcher;
-        const GroupData group{GroupId("xmltv"), "XMLTV", m_dataPath};
+        const GroupData group{GroupId(QStringLiteral("xmltv")), QStringLiteral("XMLTV"), m_dataPath};
         QList<ChannelData> data;
         bool callbackCalled = false;
         bool errorCallbackCalled = false;
@@ -75,7 +75,7 @@
 
     void testFetchProgram()
     {
-        const ChannelId channelId("channel1");
+        const ChannelId channelId(QStringLiteral("channel1"));
 
         XmltvFetcher fetcher;
         QVector<ProgramData> data;
@@ -94,32 +94,32 @@
         QCOMPARE(errorCallbackCalled, false);
         QCOMPARE(data.size(), 2);
 
-        QCOMPARE(data.at(0).m_id, ProgramId("channel1_1672182000"));
-        QCOMPARE(data.at(0).m_url, "");
+        QCOMPARE(data.at(0).m_id, ProgramId(QStringLiteral("channel1_1672182000")));
+        QCOMPARE(data.at(0).m_url, QStringLiteral(""));
         QCOMPARE(data.at(0).m_channelId, channelId);
-        QCOMPARE(data.at(0).m_startTime, QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate));
-        QCOMPARE(data.at(0).m_stopTime, QDateTime::fromString("2022-12-28T07:00:00", Qt::ISODate));
-        QCOMPARE(data.at(0).m_title, "Title 1");
-        QCOMPARE(data.at(0).m_subtitle, "Subtitle 1");
-        QCOMPARE(data.at(0).m_description, "Description 1");
+        QCOMPARE(data.at(0).m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(0).m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T07:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(0).m_title, QStringLiteral("Title 1"));
+        QCOMPARE(data.at(0).m_subtitle, QStringLiteral("Subtitle 1"));
+        QCOMPARE(data.at(0).m_description, QStringLiteral("Description 1"));
         QCOMPARE(data.at(0).m_descriptionFetched, true);
-        QCOMPARE(data.at(0).m_categories.at(0), "Category 1");
+        QCOMPARE(data.at(0).m_categories.at(0), QStringLiteral("Category 1"));
 
-        QCOMPARE(data.at(1).m_id, ProgramId("channel1_1672203600"));
-        QCOMPARE(data.at(1).m_url, "");
+        QCOMPARE(data.at(1).m_id, ProgramId(QStringLiteral("channel1_1672203600")));
+        QCOMPARE(data.at(1).m_url, QStringLiteral(""));
         QCOMPARE(data.at(1).m_channelId, channelId);
-        QCOMPARE(data.at(1).m_startTime, QDateTime::fromString("2022-12-28T07:00:00", Qt::ISODate));
-        QCOMPARE(data.at(1).m_stopTime, QDateTime::fromString("2022-12-28T10:00:00", Qt::ISODate));
-        QCOMPARE(data.at(1).m_title, "Title 2");
-        QCOMPARE(data.at(1).m_subtitle, "Subtitle 2");
-        QCOMPARE(data.at(1).m_description, "Description 2");
+        QCOMPARE(data.at(1).m_startTime, QDateTime::fromString(QStringLiteral("2022-12-28T07:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(1).m_stopTime, QDateTime::fromString(QStringLiteral("2022-12-28T10:00:00"), Qt::ISODate));
+        QCOMPARE(data.at(1).m_title, QStringLiteral("Title 2"));
+        QCOMPARE(data.at(1).m_subtitle, QStringLiteral("Subtitle 2"));
+        QCOMPARE(data.at(1).m_description, QStringLiteral("Description 2"));
         QCOMPARE(data.at(1).m_descriptionFetched, true);
-        QCOMPARE(data.at(1).m_categories.at(0), "Category 2");
+        QCOMPARE(data.at(1).m_categories.at(0), QStringLiteral("Category 2"));
     }
 
     void testFetchProgramDescription()
     {
-        const ChannelId channelId("channel1");
+        const ChannelId channelId(QStringLiteral("channel1"));
         ProgramId programId;
 
         XmltvFetcher fetcher;
@@ -128,8 +128,8 @@
         bool errorCallbackCalled = false;
         fetcher.fetchProgramDescription(
             channelId,
-            ProgramId("channel1_1672182000"),
-            "",
+            ProgramId(QStringLiteral("channel1_1672182000")),
+            QStringLiteral(""),
             [&data, &callbackCalled](const QString &description) {
                 data = description;
                 callbackCalled = true;
@@ -140,7 +140,7 @@
         // nothing done, description already known after fetchProgram()
         QCOMPARE(callbackCalled, false);
         QCOMPARE(errorCallbackCalled, false);
-        QCOMPARE(data, "");
+        QCOMPARE(data, QStringLiteral(""));
     }
 };
 
diff -uNr a/benchmarks/databasebenchmark.cpp b/benchmarks/databasebenchmark.cpp
--- a/benchmarks/databasebenchmark.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/benchmarks/databasebenchmark.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -31,9 +31,9 @@
 
         for (int i = 0; i < 10000; ++i) {
             GroupData data;
-            data.m_id = GroupId("Group" + QString::number(i));
-            data.m_name = "Group";
-            data.m_url = "GroupUrl";
+            data.m_id = GroupId(QStringLiteral("Group") + QString::number(i));
+            data.m_name = QStringLiteral("Group");
+            data.m_url = QStringLiteral("GroupUrl");
             groups.push_back(data);
         }
 
@@ -58,15 +58,15 @@
 
         for (int i = 0; i < 10000; ++i) {
             ChannelData data;
-            data.m_id = ChannelId("Channel" + QString::number(i));
-            data.m_name = "Channel";
-            data.m_url = "ChannelUrl";
-            data.m_image = "ChannelImage";
+            data.m_id = ChannelId(QStringLiteral("Channel") + QString::number(i));
+            data.m_name = QStringLiteral("Channel");
+            data.m_url = QStringLiteral("ChannelUrl");
+            data.m_image = QStringLiteral("ChannelImage");
             channels.push_back(data);
         }
 
         QBENCHMARK {
-            Database::instance().addChannels(channels, GroupId("Group1"));
+            Database::instance().addChannels(channels, GroupId(QStringLiteral("Group1")));
         }
 
         QCOMPARE(Database::instance().channelCount(), 10000);
@@ -75,7 +75,7 @@
     void testGroupsForChannel()
     {
         QBENCHMARK {
-            const QVector<GroupData> groups = Database::instance().groups(ChannelId("Channel1"));
+            const QVector<GroupData> groups = Database::instance().groups(ChannelId(QStringLiteral("Channel1")));
             QCOMPARE(groups.size(), 1);
         }
     }
@@ -84,7 +84,7 @@
     {
         QBENCHMARK {
             for (int i = 0; i < 100; ++i) {
-                Database::instance().addFavorite(ChannelId("Channel" + QString::number(i)));
+                Database::instance().addFavorite(ChannelId(QStringLiteral("Channel") + QString::number(i)));
             }
         }
     }
@@ -109,7 +109,7 @@
     {
         QVector<ChannelId> favorites;
         for (int i = 99; i >= 0; --i) {
-            favorites.push_back(ChannelId("Channel" + QString::number(i)));
+            favorites.push_back(ChannelId(QStringLiteral("Channel") + QString::number(i)));
         }
 
         QBENCHMARK {
@@ -120,7 +120,7 @@
     void testRemoveFavorite()
     {
         QBENCHMARK {
-            Database::instance().removeFavorite(ChannelId("Channel50"));
+            Database::instance().removeFavorite(ChannelId(QStringLiteral("Channel50")));
         }
         QCOMPARE(Database::instance().favoriteCount(), 99);
     }
@@ -131,16 +131,16 @@
 
         for (int i = 0; i < 10000; ++i) {
             ProgramData data;
-            data.m_id = ProgramId("Program" + QString::number(i));
-            data.m_url = "ProgramUrl";
-            data.m_channelId = ChannelId("Channel1");
-            data.m_startTime = QDateTime::fromString("2022-12-28T01:00:00", Qt::ISODate).addSecs(i);
-            data.m_stopTime = QDateTime::fromString("2022-12-28T02:00:00", Qt::ISODate).addSecs(i);
-            data.m_title = "ProgramTitle";
-            data.m_subtitle = "ProgramSubtitle";
-            data.m_description = "ProgramDescription";
+            data.m_id = ProgramId(QStringLiteral("Program") + QString::number(i));
+            data.m_url = QStringLiteral("ProgramUrl");
+            data.m_channelId = ChannelId(QStringLiteral("Channel1"));
+            data.m_startTime = QDateTime::fromString(QStringLiteral("2022-12-28T01:00:00"), Qt::ISODate).addSecs(i);
+            data.m_stopTime = QDateTime::fromString(QStringLiteral("2022-12-28T02:00:00"), Qt::ISODate).addSecs(i);
+            data.m_title = QStringLiteral("ProgramTitle");
+            data.m_subtitle = QStringLiteral("ProgramSubtitle");
+            data.m_description = QStringLiteral("ProgramDescription");
             data.m_descriptionFetched = true;
-            data.m_categories = {"Category1"};
+            data.m_categories = {QStringLiteral("Category1")};
             programs.push_back(data);
         }
 
@@ -148,7 +148,7 @@
             Database::instance().addPrograms(programs);
         }
 
-        QCOMPARE(Database::instance().programCount(ChannelId("Channel1")), 10000);
+        QCOMPARE(Database::instance().programCount(ChannelId(QStringLiteral("Channel1"))), 10000);
     }
 
     void testPrograms()
@@ -156,7 +156,7 @@
         QBENCHMARK {
             const QMap<ChannelId, QVector<ProgramData>> programs = Database::instance().programs();
             QCOMPARE(programs.size(), 1);
-            QCOMPARE(programs[ChannelId("Channel1")].size(), 10000);
+            QCOMPARE(programs[ChannelId(QStringLiteral("Channel1"))].size(), 10000);
         }
     }
 };
diff -uNr a/benchmarks/tvspielfilmfetcherbenchmark.cpp b/benchmarks/tvspielfilmfetcherbenchmark.cpp
--- a/benchmarks/tvspielfilmfetcherbenchmark.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/benchmarks/tvspielfilmfetcherbenchmark.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -103,11 +103,13 @@
 
     void testFetchGroup()
     {
-        QNetworkReply *reply = new MockQNetworkReply("data/tvspielfilmfetcher/channels.html");
+        QNetworkReply *reply = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/channels.html"));
         MockQNetworkAccessManager nam;
-        nam.registerReply("https://www.tvspielfilm.de/tv-programm/sendungen", reply);
+        nam.registerReply(QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen"), reply);
         TvSpielfilmFetcher fetcher(&nam);
-        const GroupData group{GroupId("tvspielfilm.germany"), "Germany", "https://www.tvspielfilm.de/tv-programm/sendungen"};
+        const GroupData group{GroupId(QStringLiteral("tvspielfilm.germany")),
+                              QStringLiteral("Germany"),
+                              QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen")};
         QList<ChannelData> data;
         QBENCHMARK {
             fetcher.fetchGroup(group.m_url, group.m_id, [&data](const QList<ChannelData> &channels) {
@@ -120,21 +122,21 @@
 
     void testFetchProgram()
     {
-        const ChannelId channelId("SWR");
+        const ChannelId channelId(QStringLiteral("SWR"));
 
-        QNetworkReply *replyYesterday = new MockQNetworkReply("data/tvspielfilmfetcher/empty.html");
-        QNetworkReply *replyToday = new MockQNetworkReply("data/tvspielfilmfetcher/swr.html");
-        QNetworkReply *replyTomorrow = new MockQNetworkReply("data/tvspielfilmfetcher/empty.html");
+        QNetworkReply *replyYesterday = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/empty.html"));
+        QNetworkReply *replyToday = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/swr.html"));
+        QNetworkReply *replyTomorrow = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/empty.html"));
         MockQNetworkAccessManager nam;
 
-        const QString yesterday = QDate::currentDate().addDays(-1).toString("yyyy-MM-dd");
-        const QString today = QDate::currentDate().toString("yyyy-MM-dd");
-        const QString tomorrow = QDate::currentDate().addDays(1).toString("yyyy-MM-dd");
-
-        const QString url = "https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=" + channelId.value();
-        nam.registerReply(url + "&date=" + yesterday + "&page=1", replyYesterday);
-        nam.registerReply(url + "&date=" + today + "&page=1", replyToday);
-        nam.registerReply(url + "&date=" + tomorrow + "&page=1", replyTomorrow);
+        const QString yesterday = QDate::currentDate().addDays(-1).toString(QStringLiteral("yyyy-MM-dd"));
+        const QString today = QDate::currentDate().toString(QStringLiteral("yyyy-MM-dd"));
+        const QString tomorrow = QDate::currentDate().addDays(1).toString(QStringLiteral("yyyy-MM-dd"));
+
+        const QString url = QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=") + channelId.value();
+        nam.registerReply(url + QStringLiteral("&date=") + yesterday + QStringLiteral("&page=1"), replyYesterday);
+        nam.registerReply(url + QStringLiteral("&date=") + today + QStringLiteral("&page=1"), replyToday);
+        nam.registerReply(url + QStringLiteral("&date=") + tomorrow + QStringLiteral("&page=1"), replyTomorrow);
 
         TvSpielfilmFetcher fetcher(&nam);
         size_t numPrograms = 0;
@@ -151,15 +153,17 @@
 
     void testFetchProgramDescription()
     {
-        const ChannelId channelId("SWR");
+        const ChannelId channelId(QStringLiteral("SWR"));
         ProgramId programId;
 
-        QNetworkReply *reply = new MockQNetworkReply("data/tvspielfilmfetcher/description.html");
+        QNetworkReply *reply = new MockQNetworkReply(QStringLiteral("data/tvspielfilmfetcher/description.html"));
         MockQNetworkAccessManager nam;
-        nam.registerReply("https://www.tvspielfilm.de/tv-programm/sendung/description1.html", reply);
+        nam.registerReply(QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description1.html"), reply);
         TvSpielfilmFetcher fetcher(&nam);
         QBENCHMARK {
-            fetcher.fetchProgramDescription(channelId, ProgramId("channel1_1672182000"), "https://www.tvspielfilm.de/tv-programm/sendung/description1.html");
+            fetcher.fetchProgramDescription(channelId,
+                                            ProgramId(QStringLiteral("channel1_1672182000")),
+                                            QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendung/description1.html"));
             Q_EMIT reply->finished();
         }
     }
diff -uNr a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2024-02-17 04:10:09.000000000 +0100
+++ b/CMakeLists.txt	2024-03-10 11:47:18.000000000 +0100
@@ -11,8 +11,8 @@
 
 project(telly-skout VERSION ${RELEASE_SERVICE_VERSION})
 
-set(KF_MIN_VERSION "5.75.0")
-set(QT_MIN_VERSION "5.15.0")
+set(KF_MIN_VERSION "6.0.0")
+set(QT_MIN_VERSION "6.6.0")
 
 include(FeatureSummary)
 
diff -uNr a/.flatpak-manifest.yml b/.flatpak-manifest.yml
--- a/.flatpak-manifest.yml	2024-02-17 04:10:09.000000000 +0100
+++ b/.flatpak-manifest.yml	2024-03-10 11:47:18.000000000 +0100
@@ -3,7 +3,7 @@
 ---
 app-id: org.kde.telly-skout
 runtime: org.kde.Platform
-runtime-version: 6.6-kf6preview
+runtime-version: 6.6
 sdk: org.kde.Sdk
 command: telly-skout
 copy-icon: true
@@ -17,18 +17,28 @@
   - --socket=fallback-x11
   - --device=dri
 modules:
-  - name: "kirigami-addons"
+  - name: kirigami-addons
+    buildsystem: cmake-ninja
     config-opts:
       - "-DBUILD_TESTING=OFF"
-      - "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
-    buildsystem: "cmake-ninja"
     sources:
-      - type: "git"
-        url: "https://invent.kde.org/libraries/kirigami-addons.git"
+      - type: archive
+        url: https://download.kde.org/stable/kirigami-addons/kirigami-addons-1.0.1.tar.xz
+        sha256: 9d013847efb0048c6a2799ee0ed281b14eee15314ac20d7fba853197e45f29b7
+        x-checker-data:
+          type: anitya
+          project-id: 242933
+          stable-only: true
+          url-template: https://download.kde.org/stable/kirigami-addons/kirigami-addons-$version.tar.xz
   - name: telly-skout
     buildsystem: cmake-ninja
-    config-opts:
-      - "-DBUILD_WITH_QT6=ON"
     sources:
       - type: dir
         path: '.'
+    cleanup:
+      - '/include'
+      - '/lib/cmake'
+      - '/lib/libexec'
+      - '/mkspecs'
+      - '/etc/xdg/*categories'
+      - '/share/qlogging-categories5'
diff -uNr a/.gitlab-ci.yml b/.gitlab-ci.yml
--- a/.gitlab-ci.yml	2024-02-17 04:10:09.000000000 +0100
+++ b/.gitlab-ci.yml	2024-03-10 11:47:18.000000000 +0100
@@ -6,12 +6,8 @@
     file:
       - /gitlab-templates/clang-format.yml
       - /gitlab-templates/reuse-lint.yml
-      - /gitlab-templates/linux.yml
       - /gitlab-templates/linux-qt6.yml
-      - /gitlab-templates/freebsd.yml
       - /gitlab-templates/freebsd-qt6.yml
-      - /gitlab-templates/android.yml
       - /gitlab-templates/android-qt6.yml
-      - /gitlab-templates/windows.yml
       - /gitlab-templates/windows-qt6.yml
       - /gitlab-templates/flatpak.yml
diff -uNr a/.kde-ci.yml b/.kde-ci.yml
--- a/.kde-ci.yml	2024-02-17 04:10:09.000000000 +0100
+++ b/.kde-ci.yml	2024-03-10 11:47:18.000000000 +0100
@@ -3,25 +3,6 @@
 
 Dependencies:
   - 'on':
-      - Android/Qt5
-      - FreeBSD/Qt5
-      - Linux/Qt5
-      - Windows/Qt5
-    require:
-      frameworks/extra-cmake-modules: '@stable'
-      frameworks/kcoreaddons: '@stable'
-      frameworks/kconfig: '@stable'
-      frameworks/ki18n: '@stable'
-      frameworks/kirigami: '@stable'
-      libraries/kirigami-addons: '@latest'
-  - 'on':
-      - FreeBSD/Qt5
-      - Linux/Qt5
-      - Windows/Qt5
-    require:
-      frameworks/kcrash: '@stable'
-
-  - 'on':
       - Android/Qt6
       - FreeBSD/Qt6
       - Linux/Qt6
@@ -39,6 +20,7 @@
       - Windows/Qt6
     require:
       frameworks/kcrash: '@latest-kf6'
+      frameworks/qqc2-desktop-style: '@latest-kf6'
 
 Options:
   cmake-options: '-DCMAKE_COMPILE_WARNING_AS_ERROR=ON'
diff -uNr a/org.kde.telly-skout.appdata.xml b/org.kde.telly-skout.appdata.xml
--- a/org.kde.telly-skout.appdata.xml	2024-02-17 04:10:09.000000000 +0100
+++ b/org.kde.telly-skout.appdata.xml	2024-03-10 11:47:18.000000000 +0100
@@ -62,31 +62,7 @@
   <url type="homepage">https://apps.kde.org/telly-skout</url>
   <url type="donation">https://kde.org/community/donations</url>
   <url type="bugtracker">https://bugs.kde.org/enter_bug.cgi?product=Telly%20Skout</url>
-  <developer_name>plata</developer_name>
-  <developer_name xml:lang="ca">plata</developer_name>
-  <developer_name xml:lang="ca-valencia">plata</developer_name>
-  <developer_name xml:lang="en-GB">plata</developer_name>
-  <developer_name xml:lang="eo">plata</developer_name>
-  <developer_name xml:lang="es">plata</developer_name>
-  <developer_name xml:lang="eu">plata</developer_name>
-  <developer_name xml:lang="fi">plata</developer_name>
-  <developer_name xml:lang="fr">plata</developer_name>
-  <developer_name xml:lang="gl">plata</developer_name>
-  <developer_name xml:lang="id">plata</developer_name>
-  <developer_name xml:lang="it">plata</developer_name>
-  <developer_name xml:lang="ka">plata</developer_name>
-  <developer_name xml:lang="ko">plata</developer_name>
-  <developer_name xml:lang="nl">plata</developer_name>
-  <developer_name xml:lang="pl">plata</developer_name>
-  <developer_name xml:lang="pt">plata</developer_name>
-  <developer_name xml:lang="pt-BR">plata</developer_name>
-  <developer_name xml:lang="ru">plata</developer_name>
-  <developer_name xml:lang="sk">plata</developer_name>
-  <developer_name xml:lang="sl">plata</developer_name>
-  <developer_name xml:lang="sv">plata</developer_name>
-  <developer_name xml:lang="tr">plata</developer_name>
-  <developer_name xml:lang="uk">plata</developer_name>
-  <developer_name xml:lang="x-test">xxplataxx</developer_name>
+  <developer_name translate="no">KDE</developer_name>
   <description>
     <p>Telly Skout is a convergent Kirigami TV guide. It shows the TV program for your favorite channels from TV Spielfilm or an XMLTV file.</p>
     <p xml:lang="ca">El Telly Skout és una guia de TV convergent del Kirigami. Mostra els programa de TV dels canals preferits a partir de TV Spielfilm o d'un fitxer XMLTV.</p>
@@ -245,5 +221,10 @@
       <url>https://www.plasma-mobile.org/2022/06/28/plasma-mobile-gear-22-06/</url>
     </release>
   </releases>
+  <supports>
+    <control>pointing</control>
+    <control>keyboard</control>
+    <control>touch</control>
+  </supports>
   <content_rating type="oars-1.0"/>
 </component>
diff -uNr a/po/ca/telly-skout.po b/po/ca/telly-skout.po
--- a/po/ca/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/ca/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 10:32+0100\n"
 "Last-Translator: Josep M. Ferrer <txemaq@gmail.com>\n"
 "Language-Team: Catalan <kde-i18n-ca@kde.org>\n"
@@ -44,12 +44,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE Community"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Preferit"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canals"
diff -uNr a/po/ca@valencia/telly-skout.po b/po/ca@valencia/telly-skout.po
--- a/po/ca@valencia/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/ca@valencia/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 10:32+0100\n"
 "Last-Translator: Josep M. Ferrer <txemaq@gmail.com>\n"
 "Language-Team: Catalan <kde-i18n-ca@kde.org>\n"
@@ -44,12 +44,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Comunitat KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Preferit"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canals"
diff -uNr a/po/cs/telly-skout.po b/po/cs/telly-skout.po
--- a/po/cs/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/cs/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-30 11:26+0100\n"
 "Last-Translator: Vit Pelcak <vit@pelcak.org>\n"
 "Language-Team: Czech <kde-i18n-doc@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Komunita KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Oblíbené"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanály"
diff -uNr a/po/de/telly-skout.po b/po/de/telly-skout.po
--- a/po/de/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/de/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2022-06-08 01:47+0200\n"
 "Last-Translator: Frederik Schwarzer <schwarzer@kde.org>\n"
 "Language-Team: German <kde-i18n-de@kde.org>\n"
@@ -44,12 +44,12 @@
 msgid "© 2020 KDE Community"
 msgstr "Copyright © 2020 KDE-Gemeinschaft"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favoriten"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanäle"
diff -uNr a/po/en_GB/telly-skout.po b/po/en_GB/telly-skout.po
--- a/po/en_GB/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/en_GB/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-02-27 19:42+0000\n"
 "Last-Translator: Steve Allewell <steve.allewell@gmail.com>\n"
 "Language-Team: British English <kde-l10n-en_gb@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE Community"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favourite"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Channels"
diff -uNr a/po/es/telly-skout.po b/po/es/telly-skout.po
--- a/po/es/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/es/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-29 00:48+0100\n"
 "Last-Translator: Eloy Cuadra <ecuadra@eloihr.net>\n"
 "Language-Team: Spanish <kde-l10n-es@kde.org>\n"
@@ -44,12 +44,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 la Comunidad KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favorito"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canales"
diff -uNr a/po/eu/telly-skout.po b/po/eu/telly-skout.po
--- a/po/eu/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/eu/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -9,7 +9,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-08-16 13:40+0200\n"
 "Last-Translator: Iñigo Salvador Azurmendi <xalba@ni.eus>\n"
 "Language-Team: Basque <kde-i18n-eu@kde.org>\n"
@@ -45,12 +45,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE Community"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Gogokoak"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanalak"
diff -uNr a/po/fi/telly-skout.po b/po/fi/telly-skout.po
--- a/po/fi/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/fi/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-03-11 22:42+0200\n"
 "Last-Translator: Tommi Nieminen <translator@legisign.org>\n"
 "Language-Team: Finnish <kde-i18n-doc@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE-yhteisö"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Merkitse suosikiksi"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanavat"
diff -uNr a/po/fr/telly-skout.po b/po/fr/telly-skout.po
--- a/po/fr/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/fr/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -4,7 +4,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-11-01 14:53+0100\n"
 "Last-Translator: Xavier BESNARD <xavier.besnard@neuf.fr>\n"
 "Language-Team: French <kde-francophone@kde.org>\n"
@@ -40,12 +40,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Communauté KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favoris"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Chaînes"
diff -uNr a/po/gl/telly-skout.po b/po/gl/telly-skout.po
--- a/po/gl/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/gl/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-05-12 19:22+0200\n"
 "Last-Translator: Adrián Chaves (Gallaecio) <adrian@chaves.io>\n"
 "Language-Team: Galician <proxecto@trasno.gal>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Comunidade KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favorita"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canles"
diff -uNr a/po/it/telly-skout.po b/po/it/telly-skout.po
--- a/po/it/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/it/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 19:51+0100\n"
 "Last-Translator: Vincenzo Reale <smart2128vr@gmail.com>\n"
 "Language-Team: Italian <kde-i18n-it@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Comunità KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Preferito"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canali"
diff -uNr a/po/ja/telly-skout.po b/po/ja/telly-skout.po
--- a/po/ja/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/ja/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2022-05-11 20:09-0700\n"
 "Last-Translator: Japanese KDE translation team <kde-jp@kde.org>\n"
 "Language-Team: Japanese <kde-jp@kde.org>\n"
@@ -39,12 +39,12 @@
 msgid "© 2020 KDE Community"
 msgstr ""
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr ""
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr ""
diff -uNr a/po/ka/telly-skout.po b/po/ka/telly-skout.po
--- a/po/ka/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/ka/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 07:06+0100\n"
 "Last-Translator: Temuri Doghonadze <temuri.doghonadze@gmail.com>\n"
 "Language-Team: Georgian <kde-i18n-doc@kde.org>\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE-ის საზოგადოება. ყველა უფლება დაცულია"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "რჩეული"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "არხები"
diff -uNr a/po/ko/telly-skout.po b/po/ko/telly-skout.po
--- a/po/ko/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/ko/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-03-01 01:33+0100\n"
 "Last-Translator: Shinjo Park <kde@peremen.name>\n"
 "Language-Team: Korean <kde-kr@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE Community"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "책갈피"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "채널"
diff -uNr a/po/lt/telly-skout.po b/po/lt/telly-skout.po
--- a/po/lt/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/lt/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-02-24 01:03+0000\n"
 "Last-Translator: Automatically generated\n"
 "Language-Team: none\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr ""
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr ""
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr ""
diff -uNr a/po/nl/telly-skout.po b/po/nl/telly-skout.po
--- a/po/nl/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/nl/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 13:04+0100\n"
 "Last-Translator: Freek de Kruijf <freekdekruijf@kde.nl>\n"
 "Language-Team: \n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE gemeenschap"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favoriet"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanalen"
diff -uNr a/po/pl/telly-skout.po b/po/pl/telly-skout.po
--- a/po/pl/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/pl/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-09-16 10:36+0200\n"
 "Last-Translator: Łukasz Wojniłowicz <lukasz.wojnilowicz@gmail.com>\n"
 "Language-Team: Polish <kde-i18n-doc@kde.org>\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Społeczność KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Ulubione"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanały"
diff -uNr a/po/pt/telly-skout.po b/po/pt/telly-skout.po
--- a/po/pt/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/pt/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-18 13:32+0000\n"
 "Last-Translator: José Nuno Coelho Pires <zepires@gmail.com>\n"
 "Language-Team: Portuguese <kde-i18n-pt@kde.org>\n"
@@ -38,12 +38,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 da Comunidade do KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favorito"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canais"
diff -uNr a/po/pt_BR/telly-skout.po b/po/pt_BR/telly-skout.po
--- a/po/pt_BR/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/pt_BR/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-07-04 15:31-0300\n"
 "Last-Translator: Luiz Fernando Ranghetti <elchevive@opensuse.org>\n"
 "Language-Team: Brazilian Portuguese <kde-i18n-pt_BR@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Comunidade KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favorito"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Canais"
diff -uNr a/po/ru/telly-skout.po b/po/ru/telly-skout.po
--- a/po/ru/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/ru/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-04-26 09:29+0300\n"
 "Last-Translator: Olesya Gerasimenko <translation-team@basealt.ru>\n"
 "Language-Team: Basealt Translation Team\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© Сообщество KDE, 2020"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Добавить в избранное"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Каналы"
diff -uNr a/po/sk/telly-skout.po b/po/sk/telly-skout.po
--- a/po/sk/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/sk/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -4,7 +4,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2022-05-14 20:09+0200\n"
 "Last-Translator: Roman Paholik <wizzardsk@gmail.com>\n"
 "Language-Team: Slovak <kde-sk@linux.sk>\n"
@@ -40,12 +40,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE komunita"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Obľúbené"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanály"
diff -uNr a/po/sl/telly-skout.po b/po/sl/telly-skout.po
--- a/po/sl/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/sl/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-29 09:07+0100\n"
 "Last-Translator: Matjaž Jeran <matjaz.jeran@amis.net>\n"
 "Language-Team: Slovenian <lugos-slo@lugos.si>\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 Skupnost KDE"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Priljubljen"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanali"
diff -uNr a/po/sv/telly-skout.po b/po/sv/telly-skout.po
--- a/po/sv/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/sv/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-07-24 11:36+0200\n"
 "Last-Translator: Stefan Asserhäll <stefan.asserhall@bredband.net>\n"
 "Language-Team: Swedish <kde-i18n-doc@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE-gemenskapen"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Favorit"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanaler"
diff -uNr a/po/tr/telly-skout.po b/po/tr/telly-skout.po
--- a/po/tr/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/tr/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 18:23+0300\n"
 "Last-Translator: Emir SARI <emir_sari@icloud.com>\n"
 "Language-Team: Turkish <kde-l10n-tr@kde.org>\n"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© 2020 KDE Topluluğu"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Beğenilere Ekle"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Kanallar"
diff -uNr a/po/uk/telly-skout.po b/po/uk/telly-skout.po
--- a/po/uk/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/uk/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2023-01-28 08:59+0200\n"
 "Last-Translator: Yuri Chornoivan <yurchor@ukr.net>\n"
 "Language-Team: Ukrainian <kde-i18n-uk@kde.org>\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr "© Спільнота KDE, 2020"
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr "Улюблене"
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr "Канали"
diff -uNr a/po/zh_CN/telly-skout.po b/po/zh_CN/telly-skout.po
--- a/po/zh_CN/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/zh_CN/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -2,8 +2,8 @@
 msgstr ""
 "Project-Id-Version: kdeorg\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
-"PO-Revision-Date: 2024-02-05 11:41\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
+"PO-Revision-Date: 2024-03-09 04:52\n"
 "Last-Translator: \n"
 "Language-Team: Chinese Simplified\n"
 "Language: zh_CN\n"
@@ -14,8 +14,8 @@
 "X-Crowdin-Project: kdeorg\n"
 "X-Crowdin-Project-ID: 269464\n"
 "X-Crowdin-Language: zh-CN\n"
-"X-Crowdin-File: /kf5-trunk/messages/telly-skout/telly-skout.pot\n"
-"X-Crowdin-File-ID: 26998\n"
+"X-Crowdin-File: /kf5-stable/messages/telly-skout/telly-skout.pot\n"
+"X-Crowdin-File-ID: 42041\n"
 
 #, kde-format
 msgctxt "NAME OF TRANSLATORS"
@@ -42,12 +42,12 @@
 msgid "© 2020 KDE Community"
 msgstr ""
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr ""
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr ""
diff -uNr a/po/zh_TW/telly-skout.po b/po/zh_TW/telly-skout.po
--- a/po/zh_TW/telly-skout.po	2024-02-17 04:10:09.000000000 +0100
+++ b/po/zh_TW/telly-skout.po	2024-03-10 11:47:18.000000000 +0100
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: telly-skout\n"
 "Report-Msgid-Bugs-To: https://bugs.kde.org\n"
-"POT-Creation-Date: 2023-11-05 12:42+0000\n"
+"POT-Creation-Date: 2024-03-10 03:46+0000\n"
 "PO-Revision-Date: 2022-06-05 00:49+0000\n"
 "Last-Translator: Automatically generated\n"
 "Language-Team: none\n"
@@ -43,12 +43,12 @@
 msgid "© 2020 KDE Community"
 msgstr ""
 
-#: qml/ChannelListDelegate.qml:19
+#: qml/ChannelListDelegate.qml:26
 #, kde-format
 msgid "Favorite"
 msgstr ""
 
-#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:24
+#: qml/ChannelListPage.qml:19 qml/GroupListDelegate.qml:22
 #, kde-format
 msgid "Channels"
 msgstr ""
diff -uNr a/src/channelsproxymodel.cpp b/src/channelsproxymodel.cpp
--- a/src/channelsproxymodel.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/channelsproxymodel.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -9,7 +9,7 @@
 ChannelsProxyModel::ChannelsProxyModel(QObject *parent)
     : QSortFilterProxyModel(parent)
     , m_onlyFavorites(false)
-    , m_group("")
+    , m_group(QStringLiteral(""))
 {
     connect(&Database::instance(), &Database::channelDetailsUpdated, this, [this]() {
         invalidateFilter();
diff -uNr a/src/database.cpp b/src/database.cpp
--- a/src/database.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/database.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -116,7 +116,7 @@
     qDebug() << "Create DB tables";
 
     TRUE_OR_RETURN(execute(QStringLiteral("CREATE TABLE IF NOT EXISTS Fetcher (id INTEGER UNIQUE);")));
-    TRUE_OR_RETURN(execute(QStringLiteral("INSERT OR IGNORE INTO Fetcher VALUES (") + QString::number(TellySkoutSettings::fetcher()) + ");"));
+    TRUE_OR_RETURN(execute(QStringLiteral("INSERT OR IGNORE INTO Fetcher VALUES (") + QString::number(TellySkoutSettings::fetcher()) + QStringLiteral(");")));
 
     TRUE_OR_RETURN(execute(QStringLiteral("CREATE TABLE IF NOT EXISTS \"Groups\" (id TEXT UNIQUE, name TEXT, url TEXT);")));
     TRUE_OR_RETURN(execute(QStringLiteral("CREATE TABLE IF NOT EXISTS Channels (id TEXT UNIQUE, name TEXT, url TEXT, image TEXT);")));
@@ -331,7 +331,7 @@
 
         // store channel per group
         {
-            m_addGroupChannelQuery->bindValue(QStringLiteral(":id"), group.value() + "_" + data.m_id.value());
+            m_addGroupChannelQuery->bindValue(QStringLiteral(":id"), QString(group.value() + QStringLiteral("_") + data.m_id.value()));
             m_addGroupChannelQuery->bindValue(QStringLiteral(":group"), group.value());
             m_addGroupChannelQuery->bindValue(QStringLiteral(":channel"), data.m_id.value());
             execute(*m_addGroupChannelQuery);
diff -uNr a/src/localdataprovider.cpp b/src/localdataprovider.cpp
--- a/src/localdataprovider.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/localdataprovider.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -11,7 +11,7 @@
     if (file.open(QIODevice::ReadOnly)) {
         callback(file.readAll());
     } else {
-        errorCallback(Error("Could not open" + url.toDisplayString()));
+        errorCallback(Error(QStringLiteral("Could not open") + url.toDisplayString()));
     }
     file.close();
 }
diff -uNr a/src/main.cpp b/src/main.cpp
--- a/src/main.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/main.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -64,7 +64,7 @@
                      applicationDescription,
                      KAboutLicense::LGPL_V2_1,
                      i18n("© 2020 KDE Community"));
-    about.addAuthor("Plata", QString(), QStringLiteral("plata.hill@kdemail.net"));
+    about.addAuthor(QStringLiteral("Plata"), QString(), QStringLiteral("plata.hill@kdemail.net"));
     KAboutData::setApplicationData(about);
 
     QGuiApplication::setWindowIcon(QIcon::fromTheme(QStringLiteral("org.kde.telly-skout")));
diff -uNr a/src/networkfetcher.cpp b/src/networkfetcher.cpp
--- a/src/networkfetcher.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/networkfetcher.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -23,7 +23,7 @@
 
     downloadImage(url, callback, errorCallback);
 
-    return "";
+    return QStringLiteral("");
 }
 
 QString NetworkFetcher::imagePath(const QString &url)
diff -uNr a/src/programdata.h b/src/programdata.h
--- a/src/programdata.h	2024-02-17 04:10:09.000000000 +0100
+++ b/src/programdata.h	2024-03-10 11:47:18.000000000 +0100
@@ -18,6 +18,6 @@
     QString m_title;
     QString m_subtitle;
     QString m_description;
-    bool m_descriptionFetched;
+    bool m_descriptionFetched = false;
     QVector<QString> m_categories;
 };
diff -uNr a/src/qml/ChannelListDelegate.qml b/src/qml/ChannelListDelegate.qml
--- a/src/qml/ChannelListDelegate.qml	2024-02-17 04:10:09.000000000 +0100
+++ b/src/qml/ChannelListDelegate.qml	2024-03-10 11:47:18.000000000 +0100
@@ -4,43 +4,55 @@
 import QtQuick 2.14
 import QtQuick.Controls 2.14 as Controls
 import QtQuick.Layouts 1.14
+import QtQuick.Templates 2.15 as Templates
 import org.kde.TellySkout 1.0
 import org.kde.kirigami 2.19 as Kirigami
 
-Kirigami.SwipeListItem {
-    id: listItem
+Templates.ItemDelegate {
+    id: delegate
 
-    property var listView
     property bool sortable: false
+    property var listView
 
-    actions: [
-        Kirigami.Action {
-            icon.name: checked ? "favorite" : "list-add"
-            text: i18n("Favorite")
-            checkable: true
-            checked: model.channel.favorite
-            onToggled: channelsModel.setFavorite(model.channel.id, checked)
-        }
-    ]
+    width: parent ? parent.width : implicitWidth
+    height: listItem.implicitHeight
 
-    contentItem: RowLayout {
-        Kirigami.ListItemDragHandle {
-            listItem: listItem
-            listView: listItem.listView
-            onMoveRequested: sortable ? listView.model.move(oldIndex, newIndex) : {
+    Kirigami.SwipeListItem {
+        id: listItem
+
+        actions: [
+            Kirigami.Action {
+                icon.name: checked ? "favorite" : "list-add"
+                text: i18n("Favorite")
+                checkable: true
+                checked: model.channel.favorite
+                onToggled: channelsModel.setFavorite(model.channel.id, checked)
             }
-            visible: listItem.sortable
-        }
+        ]
 
-        Kirigami.Icon {
-            source: model.channel.refreshing ? "view-refresh" : model.channel.image === "" ? "tv" : Fetcher.image(model.channel.image)
-        }
+        contentItem: RowLayout {
+            Kirigami.ListItemDragHandle {
+                listItem: listItem
+                listView: delegate.listView
+                onMoveRequested: (oldIndex, newIndex) => {
+                    if (sortable)
+                        listView.model.move(oldIndex, newIndex);
+
+                }
+                visible: delegate.sortable
+            }
+
+            Kirigami.Icon {
+                source: model.channel.refreshing ? "view-refresh" : model.channel.image === "" ? "tv" : Fetcher.image(model.channel.image)
+            }
+
+            Controls.Label {
+                Layout.fillWidth: true
+                height: Math.max(implicitHeight, Kirigami.Units.iconSizes.smallMedium)
+                text: model.channel.displayName || model.channel.name
+                color: listItem.checked || (listItem.pressed && !listItem.checked && !listItem.sectionDelegate) ? listItem.activeTextColor : listItem.textColor
+            }
 
-        Controls.Label {
-            Layout.fillWidth: true
-            height: Math.max(implicitHeight, Kirigami.Units.iconSizes.smallMedium)
-            text: model.channel.displayName || model.channel.name
-            color: listItem.checked || (listItem.pressed && !listItem.checked && !listItem.sectionDelegate) ? listItem.activeTextColor : listItem.textColor
         }
 
     }
diff -uNr a/src/qml/ChannelListPage.qml b/src/qml/ChannelListPage.qml
--- a/src/qml/ChannelListPage.qml	2024-02-17 04:10:09.000000000 +0100
+++ b/src/qml/ChannelListPage.qml	2024-03-10 11:47:18.000000000 +0100
@@ -2,7 +2,7 @@
 // SPDX-License-Identifier: LGPL-2.1-or-later
 
 import Qt.labs.platform 1.1
-import QtQuick 2.14
+import QtQuick 2.15
 import QtQuick.Controls 2.14 as Controls
 import QtQuick.Layouts 1.14
 import org.kde.TellySkout 1.0
@@ -41,6 +41,7 @@
         anchors.fill: parent
         model: root.onlyFavorites ? channelsModel : proxyModel
         currentIndex: -1 // do not select first list item
+        reuseItems: true
 
         ChannelsProxyModel {
             id: proxyModel
@@ -56,17 +57,7 @@
             onlyFavorites: root.onlyFavorites
         }
 
-        delegate: Kirigami.DelegateRecycler {
-            width: parent ? parent.width : implicitWidth
-            sourceComponent: delegateComponent
-        }
-
-    }
-
-    Component {
-        id: delegateComponent
-
-        ChannelListDelegate {
+        delegate: ChannelListDelegate {
             listView: channelList
             sortable: root.sortable
         }
diff -uNr a/src/qml/ChannelTablePage.qml b/src/qml/ChannelTablePage.qml
--- a/src/qml/ChannelTablePage.qml	2024-02-17 04:10:09.000000000 +0100
+++ b/src/qml/ChannelTablePage.qml	2024-03-10 11:47:18.000000000 +0100
@@ -94,6 +94,7 @@
             contentHeight: 24 * 60 * pxPerMin
             contentWidth: content.width
             boundsBehavior: Flickable.StopAtBounds
+            clip: true
             Component.onCompleted: {
                 // scroll to current time
                 var today = new Date();
diff -uNr a/src/qml/GroupListDelegate.qml b/src/qml/GroupListDelegate.qml
--- a/src/qml/GroupListDelegate.qml	2024-02-17 04:10:09.000000000 +0100
+++ b/src/qml/GroupListDelegate.qml	2024-03-10 11:47:18.000000000 +0100
@@ -8,14 +8,13 @@
 import org.kde.kirigami 2.19 as Kirigami
 
 Kirigami.SwipeListItem {
-    leftPadding: 0
-    rightPadding: 0
+    padding: 0
 
-    contentItem: Kirigami.BasicListItem {
+    contentItem: Controls.ItemDelegate {
         anchors.top: parent.top
         anchors.bottom: parent.bottom
         text: model.group.name
-        icon: model.group.refreshing ? "view-refresh" : ""
+        icon.name: model.group.refreshing ? "view-refresh" : ""
         onClicked: {
             lastGroup = model.group.id;
             Fetcher.fetchGroup(model.group.url, model.group.id);
diff -uNr a/src/qml/SettingsPage.qml b/src/qml/SettingsPage.qml
--- a/src/qml/SettingsPage.qml	2024-02-17 04:10:09.000000000 +0100
+++ b/src/qml/SettingsPage.qml	2024-03-10 11:47:18.000000000 +0100
@@ -3,7 +3,7 @@
 
 import QtQuick 2.14
 import QtQuick.Controls 2.14 as Controls
-import QtQuick.Dialogs 1.0
+import QtQuick.Dialogs
 import QtQuick.Layouts 1.14
 import QtQuick.Window 2.15
 import org.kde.kirigami 2.19 as Kirigami
@@ -137,11 +137,10 @@
                 id: fileDialog
 
                 nameFilters: [i18n("XML files (*.xml)"), i18n("All files (*)")]
-                selectExisting: true
-                selectMultiple: false
+                fileMode: FileDialog.OpenFile
                 onAccepted: {
                     // remove prefixed "file://"
-                    const path = fileUrl.toString().replace(/^(file:\/{2})/, "");
+                    const path = selectedFile.toString().replace(/^(file:\/{2})/, "");
                     xmltvFile.text = path;
                     _settings.xmltvFile = path;
                 }
diff -uNr a/src/qml/TellySkoutGlobalDrawer.qml b/src/qml/TellySkoutGlobalDrawer.qml
--- a/src/qml/TellySkoutGlobalDrawer.qml	2024-02-17 04:10:09.000000000 +0100
+++ b/src/qml/TellySkoutGlobalDrawer.qml	2024-03-10 11:47:18.000000000 +0100
@@ -13,7 +13,7 @@
     actions: [
         Kirigami.Action {
             text: i18n("Favorites")
-            iconName: "view-calendar-day"
+            icon.name: "view-calendar-day"
             onTriggered: {
                 pageStack.layers.clear();
                 pageStack.clear();
@@ -24,7 +24,7 @@
         },
         Kirigami.Action {
             text: i18n("Select Favorites")
-            iconName: "favorite"
+            icon.name: "favorite"
             onTriggered: {
                 pageStack.layers.clear();
                 pageStack.clear();
@@ -33,7 +33,7 @@
         },
         Kirigami.Action {
             text: i18n("Sort Favorites")
-            iconName: "view-sort"
+            icon.name: "view-sort"
             onTriggered: {
                 pageStack.layers.clear();
                 pageStack.clear();
@@ -46,13 +46,13 @@
         },
         Kirigami.Action {
             text: i18n("Settings")
-            iconName: "settings-configure"
+            icon.name: "settings-configure"
             onTriggered: pageStack.layers.push("qrc:/SettingsPage.qml")
             enabled: pageStack.layers.currentItem.title !== i18n("Settings")
         },
         Kirigami.Action {
             text: i18n("About")
-            iconName: "help-about-symbolic"
+            icon.name: "help-about-symbolic"
             onTriggered: pageStack.layers.push(aboutPage)
             enabled: pageStack.layers.currentItem.title !== i18n("About")
         }
diff -uNr a/src/tvspielfilmfetcher.cpp b/src/tvspielfilmfetcher.cpp
--- a/src/tvspielfilmfetcher.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/tvspielfilmfetcher.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -26,9 +26,9 @@
 
     QVector<GroupData> groups;
     GroupData data;
-    data.m_id = GroupId("tvspielfilm.germany");
+    data.m_id = GroupId(QStringLiteral("tvspielfilm.germany"));
     data.m_name = i18n("Germany");
-    data.m_url = "https://www.tvspielfilm.de/tv-programm/sendungen";
+    data.m_url = QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen");
 
     groups.push_back(data);
 
@@ -46,15 +46,15 @@
 
     m_provider.get(
         QUrl(url),
-        [this, callback](QByteArray data) {
-            static QRegularExpression reChannelList("<select name=\\\"channel\\\">.*</select>");
+        [this, callback](const QByteArray &data) {
+            static QRegularExpression reChannelList(QStringLiteral("<select name=\\\"channel\\\">.*</select>"));
             reChannelList.setPatternOptions(QRegularExpression::DotMatchesEverythingOption);
-            QRegularExpressionMatch matchChannelList = reChannelList.match(data);
+            QRegularExpressionMatch matchChannelList = reChannelList.match(QString::fromUtf8(data));
             if (matchChannelList.hasMatch()) {
                 QMap<ChannelId, ChannelData> channels;
                 const QString channelList = matchChannelList.captured(0);
 
-                static QRegularExpression reChannel("<option.*?value=\\\"(.*?)\\\">&nbsp;&nbsp;(.*?)</option>");
+                static QRegularExpression reChannel(QStringLiteral("<option.*?value=\\\"(.*?)\\\">&nbsp;&nbsp;(.*?)</option>"));
                 reChannel.setPatternOptions(QRegularExpression::DotMatchesEverythingOption);
                 QRegularExpressionMatchIterator it = reChannel.globalMatch(channelList);
                 while (it.hasNext()) {
@@ -62,7 +62,7 @@
                     const ChannelId id = ChannelId(channelMatch.captured(1));
 
                     // exclude groups (e.g. "alle Sender" or "g:1")
-                    if (id.value().length() > 0 && !id.value().contains("g:")) {
+                    if (id.value().length() > 0 && !id.value().contains(QStringLiteral("g:"))) {
                         const QString name = channelMatch.captured(2);
                         fetchChannel(id, name, channels);
                     }
@@ -91,9 +91,10 @@
         data.m_name = name;
 
         // https://www.tvspielfilm.de/tv-programm/sendungen/das-erste,ARD.html
-        data.m_url = "https://www.tvspielfilm.de/tv-programm/sendungen/" + name.toLower().replace(' ', '-') + "," + channelId.value() + ".html";
+        data.m_url = QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen/") + name.toLower().replace(QLatin1Char(' '), QLatin1Char('-'))
+            + QStringLiteral(",") + channelId.value() + QStringLiteral(".html");
 
-        data.m_image = "https://a2.tvspielfilm.de/images/tv/sender/mini/" + channelId.value().toLower() + ".png";
+        data.m_image = QStringLiteral("https://a2.tvspielfilm.de/images/tv/sender/mini/") + channelId.value().toLower() + QStringLiteral(".png");
 
         channels.insert(channelId, data);
     }
@@ -111,7 +112,7 @@
         QUrl(url),
         [this, channelId, programId, url, callback](const QByteArray &data) {
             if (callback) {
-                callback(processDescription(data, url));
+                callback(processDescription(QString::fromUtf8(data), url));
             }
         },
         [channelId, programId, url, errorCallback](const Error &error) {
@@ -150,22 +151,22 @@
                                       std::function<void(const Error &)> errorCallback)
 {
     // https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=ARD&date=2021-11-09&page=1
-    const QString url = "https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=" + channelId.value() + "&date=" + date.toString("yyyy-MM-dd")
-        + "&page=" + QString::number(page);
+    const QString url = QStringLiteral("https://www.tvspielfilm.de/tv-programm/sendungen/?time=day&channel=") + channelId.value() + QStringLiteral("&date=")
+        + date.toString(QStringLiteral("yyyy-MM-dd")) + QStringLiteral("&page=") + QString::number(page);
 
     qDebug() << "Starting to fetch program for " << channelId.value() << "(" << url << ")";
 
     m_provider.get(
         QUrl(url),
-        [this, channelId, date, page, programs, callback, errorCallback, url](QByteArray data) {
+        [this, channelId, date, page, programs, callback, errorCallback, url](const QByteArray &data) {
             QVector<ProgramData> allPrograms(programs);
-            allPrograms.append(processChannel(data, url, channelId));
+            allPrograms.append(processChannel(QString::fromUtf8(data), url, channelId));
 
             // fetch next page
-            static QRegularExpression reNextPage(
-                "<ul class=\\\"pagination__items\\\">.*</ul>\\s*<a href=\\\"(.*?)\\\".*class=\\\"js-track-link pagination__link pagination__link--next\\\"");
+            static QRegularExpression reNextPage(QStringLiteral(
+                "<ul class=\\\"pagination__items\\\">.*</ul>\\s*<a href=\\\"(.*?)\\\".*class=\\\"js-track-link pagination__link pagination__link--next\\\""));
             reNextPage.setPatternOptions(QRegularExpression::DotMatchesEverythingOption);
-            QRegularExpressionMatch matchNextPage = reNextPage.match(data);
+            QRegularExpressionMatch matchNextPage = reNextPage.match(QString::fromUtf8(data));
             if (matchNextPage.hasMatch()) {
                 fetchProgram(channelId, date, page + 1, allPrograms, callback, errorCallback);
             } else {
@@ -196,16 +197,18 @@
     QVector<ProgramData> programs;
 
     // column with title + description URL + start/stop time
-    const QString reDescriptionUrl("<a href=\\\"(https://www.tvspielfilm.de/tv-programm/sendung/.*?\\.html)\\\"");
-    const QString reTitle("<strong>(.*?)</strong>");
-    const QString reDateTime("class=\\\"progressbar-info\\\".*?data-rel-start=\\\"(\\d+)\\\".*?data-rel-end=\\\"(\\d+)\\\"");
-    const QString reMainCol("<td class=\\\"col-3\\\">.*?" + reDescriptionUrl + ".*?" + reTitle + ".*?" + reDateTime + ".*?</td>");
+    const QString reDescriptionUrl(QStringLiteral("<a href=\\\"(https://www.tvspielfilm.de/tv-programm/sendung/.*?\\.html)\\\""));
+    const QString reTitle(QStringLiteral("<strong>(.*?)</strong>"));
+    const QString reDateTime(QStringLiteral("class=\\\"progressbar-info\\\".*?data-rel-start=\\\"(\\d+)\\\".*?data-rel-end=\\\"(\\d+)\\\""));
+    const QString reMainCol(QStringLiteral("<td class=\\\"col-3\\\">.*?") + reDescriptionUrl + QStringLiteral(".*?") + reTitle + QStringLiteral(".*?")
+                            + reDateTime + QStringLiteral(".*?</td>"));
 
     // column with category
-    const QString reCategory("<span>(.*?)</span>");
-    const QString reCategoryCol("<td class=\\\"col-4\\\">.*?" + reCategory + ".*?</td>");
+    const QString reCategory(QStringLiteral("<span>(.*?)</span>"));
+    const QString reCategoryCol(QStringLiteral("<td class=\\\"col-4\\\">.*?") + reCategory + QStringLiteral(".*?</td>"));
 
-    QRegularExpression reProgram("<tr class=\\\"hover\\\">.*?" + reMainCol + ".*?" + reCategoryCol + ".*?</tr>");
+    QRegularExpression reProgram(QStringLiteral("<tr class=\\\"hover\\\">.*?") + reMainCol + QStringLiteral(".*?") + reCategoryCol
+                                 + QStringLiteral(".*?</tr>"));
     reProgram.setPatternOptions(QRegularExpression::DotMatchesEverythingOption);
     QRegularExpressionMatchIterator it = reProgram.globalMatch(infoTable);
     while (it.hasNext()) {
@@ -216,7 +219,7 @@
             // show this as alternative in the title
             ProgramData &previousProgamData = programs.last();
             if (programData.m_startTime < previousProgamData.m_stopTime) {
-                previousProgamData.m_title += " / " + programData.m_title;
+                previousProgamData.m_title += QStringLiteral(" / ") + programData.m_title;
             } else {
                 programs.push_back(programData);
             }
@@ -244,7 +247,7 @@
         const QString category = programMatch.captured(5);
 
         // channel + start time can be used as ID
-        const ProgramId programId = ProgramId(channelId.value() + "_" + QString::number(startTime.toSecsSinceEpoch()));
+        const ProgramId programId = ProgramId(channelId.value() + QStringLiteral("_") + QString::number(startTime.toSecsSinceEpoch()));
 
         programData.m_id = programId;
         programData.m_url = descriptionUrl;
@@ -252,8 +255,8 @@
         programData.m_startTime = startTime.toLocalTime();
         programData.m_stopTime = stopTime.toLocalTime();
         programData.m_title = title;
-        programData.m_subtitle = "";
-        programData.m_description = "";
+        programData.m_subtitle = QStringLiteral("");
+        programData.m_description = QStringLiteral("");
         programData.m_descriptionFetched = false;
         programData.m_categories.push_back(category);
     } else {
@@ -265,7 +268,7 @@
 
 QString TvSpielfilmFetcher::processDescription(const QString &descriptionPage, const QString &url)
 {
-    static QRegularExpression reDescription("<section class=\\\"broadcast-detail__description\\\">.*?<p>(.*?)</p>");
+    static QRegularExpression reDescription(QStringLiteral("<section class=\\\"broadcast-detail__description\\\">.*?<p>(.*?)</p>"));
     reDescription.setPatternOptions(QRegularExpression::DotMatchesEverythingOption);
     QRegularExpressionMatch match = reDescription.match(descriptionPage);
     if (match.hasMatch()) {
@@ -273,7 +276,7 @@
     } else {
         qWarning() << "Failed to parse program description from" << url;
     }
-    return "";
+    return QStringLiteral("");
 }
 
 bool TvSpielfilmFetcher::programExists(const ChannelId &channelId, const QDate &date)
diff -uNr a/src/types.h b/src/types.h
--- a/src/types.h	2024-02-17 04:10:09.000000000 +0100
+++ b/src/types.h	2024-03-10 11:47:18.000000000 +0100
@@ -56,7 +56,7 @@
 public:
     Error()
         : m_id(0)
-        , m_message("")
+        , m_message(QStringLiteral(""))
     {
     }
 
@@ -75,7 +75,7 @@
     void reset()
     {
         m_id = 0;
-        m_message = "";
+        m_message = QStringLiteral("");
     }
 
     int m_id;
diff -uNr a/src/xmltvfetcher.cpp b/src/xmltvfetcher.cpp
--- a/src/xmltvfetcher.cpp	2024-02-17 04:10:09.000000000 +0100
+++ b/src/xmltvfetcher.cpp	2024-03-10 11:47:18.000000000 +0100
@@ -14,7 +14,7 @@
 #include <QStringView>
 
 XmltvFetcher::XmltvFetcher()
-    : m_doc("xmltv")
+    : m_doc(QStringLiteral("xmltv"))
 {
     m_provider.get(QUrl::fromLocalFile(TellySkoutSettings::xmltvFile()), std::bind(&XmltvFetcher::open, this, std::placeholders::_1), [](const Error &error) {
         Q_UNUSED(error)
@@ -38,7 +38,7 @@
     QVector<GroupData> groups;
 
     GroupData data;
-    data.m_id = GroupId("xmltv");
+    data.m_id = GroupId(QStringLiteral("xmltv"));
     data.m_name = i18n("XMLTV");
     data.m_url = TellySkoutSettings::xmltvFile();
 
@@ -60,16 +60,16 @@
 
     QMap<ChannelId, ChannelData> channels;
 
-    QDomNodeList nodes = m_doc.elementsByTagName("channel");
+    QDomNodeList nodes = m_doc.elementsByTagName(QStringLiteral("channel"));
 
     for (int i = 0; i < nodes.count(); i++) {
         QDomNode elm = nodes.at(i);
         if (elm.isElement()) {
             const QDomNamedNodeMap &attributes = elm.attributes();
-            const ChannelId id = ChannelId(attributes.namedItem("id").toAttr().value());
+            const ChannelId id = ChannelId(attributes.namedItem(QStringLiteral("id")).toAttr().value());
 
-            const QString &name = elm.firstChildElement("display-name").text();
-            const QString &icon = elm.firstChildElement("icon").attributes().namedItem("src").toAttr().value();
+            const QString &name = elm.firstChildElement(QStringLiteral("display-name")).text();
+            const QString &icon = elm.firstChildElement(QStringLiteral("icon")).attributes().namedItem(QStringLiteral("src")).toAttr().value();
 
             fetchChannel(id, name, icon, channels);
         }
@@ -88,12 +88,12 @@
 
     QVector<ProgramData> programs;
 
-    QDomNodeList programNodes = m_doc.elementsByTagName("programme");
+    QDomNodeList programNodes = m_doc.elementsByTagName(QStringLiteral("programme"));
     for (int i = 0; i < programNodes.count(); i++) {
         const QDomNode &program = programNodes.at(i);
         const QDomNamedNodeMap &attributes = program.attributes();
 
-        if (channelId.value() != attributes.namedItem("channel").toAttr().value()) {
+        if (channelId.value() != attributes.namedItem(QStringLiteral("channel")).toAttr().value()) {
             continue; // TODO: do not loop all programs for each channel
         }
         programs.push_back(processProgram(program));
@@ -125,13 +125,13 @@
     Q_UNUSED(callback)
     Q_UNUSED(errorCallback)
 
-    return "";
+    return QStringLiteral("");
 }
 
 QString XmltvFetcher::imagePath(const QString &url)
 {
     Q_UNUSED(url);
-    return "";
+    return QStringLiteral("");
 }
 
 void XmltvFetcher::open(QByteArray data)
@@ -150,7 +150,7 @@
         ChannelData data;
         data.m_id = channelId;
         data.m_name = name;
-        data.m_url = "";
+        data.m_url = QStringLiteral("");
         data.m_image = icon;
 
         channels.insert(channelId, data);
@@ -162,27 +162,27 @@
     ProgramData data;
 
     const QDomNamedNodeMap &attributes = program.attributes();
-    data.m_channelId = ChannelId(attributes.namedItem("channel").toAttr().value());
-    const QString &startTimeString = attributes.namedItem("start").toAttr().value();
-    QDateTime startTime = QDateTime::fromString(startTimeString.left(14), "yyyyMMddHHmmss");
+    data.m_channelId = ChannelId(attributes.namedItem(QStringLiteral("channel")).toAttr().value());
+    const QString &startTimeString = attributes.namedItem(QStringLiteral("start")).toAttr().value();
+    QDateTime startTime = QDateTime::fromString(startTimeString.left(14), QStringLiteral("yyyyMMddHHmmss"));
     const int startTimeOffset = QStringView{startTimeString}.right(5).left(3).toInt();
     startTime.setOffsetFromUtc(startTimeOffset * 3600);
     startTime = startTime.toUTC();
     data.m_startTime = startTime;
     // channel + start time can be used as ID
-    data.m_id = ProgramId(data.m_channelId.value() + "_" + QString::number(startTime.toSecsSinceEpoch()));
-    const QString &stopTimeString = attributes.namedItem("stop").toAttr().value();
-    QDateTime stopTime = QDateTime::fromString(stopTimeString.left(14), "yyyyMMddHHmmss");
+    data.m_id = ProgramId(data.m_channelId.value() + QStringLiteral("_") + QString::number(startTime.toSecsSinceEpoch()));
+    const QString &stopTimeString = attributes.namedItem(QStringLiteral("stop")).toAttr().value();
+    QDateTime stopTime = QDateTime::fromString(stopTimeString.left(14), QStringLiteral("yyyyMMddHHmmss"));
     const int stopTimeOffset = QStringView{stopTimeString}.right(5).left(3).toInt();
     stopTime.setOffsetFromUtc(stopTimeOffset * 3600);
     stopTime = stopTime.toUTC();
     data.m_stopTime = stopTime;
-    data.m_title = program.namedItem("title").toElement().text();
-    data.m_subtitle = program.namedItem("sub-title").toElement().text();
-    data.m_description = program.namedItem("desc").toElement().text();
+    data.m_title = program.namedItem(QStringLiteral("title")).toElement().text();
+    data.m_subtitle = program.namedItem(QStringLiteral("sub-title")).toElement().text();
+    data.m_description = program.namedItem(QStringLiteral("desc")).toElement().text();
 
     if (program.isElement()) {
-        QDomNodeList categoryNodes = program.toElement().elementsByTagName("category");
+        QDomNodeList categoryNodes = program.toElement().elementsByTagName(QStringLiteral("category"));
         for (int i = 0; i < categoryNodes.count(); i++) {
             data.m_categories.push_back(categoryNodes.at(i).toElement().text());
         }
